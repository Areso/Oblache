{
  "uid" : "beb00af38074922e",
  "name" : "POST registration Bulgaria language.",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_registration_for_bulgaria_language",
  "historyId" : "9770496b60bb3f26dd42c11f178217a0",
  "time" : {
    "start" : 1741225074787,
    "stop" : 1741225075155,
    "duration" : 368
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 400",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fc9537a0b60>\n\n    @allure.title('POST registration Bulgaria language.')\n    def test_post_registration_for_bulgaria_language(self):\n        response = API.post_registration_variety_email(\n            mail=random.choice(['gmail', 'mail', 'yandex']),\n            old_password=TestPOST.old_password,\n            prefix='bg',\n            language='bg-bg',\n            tos_agree=True)\n>       Checking.check_status_code(response, 201)\n\ntests_api/test_bd.py:151: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 400",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fc9537a0b60>\n\n    @allure.title('POST registration Bulgaria language.')\n    def test_post_registration_for_bulgaria_language(self):\n        response = API.post_registration_variety_email(\n            mail=random.choice(['gmail', 'mail', 'yandex']),\n            old_password=TestPOST.old_password,\n            prefix='bg',\n            language='bg-bg',\n            tos_agree=True)\n>       Checking.check_status_code(response, 201)\n\ntests_api/test_bd.py:151: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_registration_variety_email",
      "time" : {
        "start" : 1741225074787,
        "stop" : 1741225075154,
        "duration" : 367
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /register",
        "time" : {
          "start" : 1741225075154,
          "stop" : 1741225075154,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1741225075154,
          "stop" : 1741225075154,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Url: https://dbend.areso.pro/register",
          "time" : {
            "start" : 1741225075154,
            "stop" : 1741225075154,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'None'}",
          "time" : {
            "start" : 1741225075154,
            "stop" : 1741225075154,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: \n                                {\n                                \"email\": f'aqa2025_03_06_01_37_47@yandex.bg',\n                                \"password\": password,\n                                \"tos_agree\": True,\n                                \"language\": bg-bg\n                               }",
          "time" : {
            "start" : 1741225075154,
            "stop" : 1741225075154,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 3,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1741225075154,
          "stop" : 1741225075154,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 400",
          "time" : {
            "start" : 1741225075154,
            "stop" : 1741225075154,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n    \"content\": \"msg[35]: \\u0438\\u043c\\u0435\\u0439\\u043b \\u0438\\u043b\\u0438 \\u043f\\u0430\\u0440\\u043e\\u043b\\u0430 \\u043d\\u0435 \\u0441\\u0430 \\u043f\\u0440\\u0435\\u0434\\u043e\\u0441\\u0442\\u0430\\u0432\\u0435\\u043d\\u0438\"\n}\n",
          "time" : {
            "start" : 1741225075154,
            "stop" : 1741225075154,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 8,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 201 == Response status code: 400",
      "time" : {
        "start" : 1741225075154,
        "stop" : 1741225075154,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 400\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 10,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1319-631"
  }, {
    "name" : "thread",
    "value" : "2479-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 12,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 192,
        "unknown" : 0,
        "total" : 207
      },
      "items" : [ {
        "uid" : "d84cd8d5bd2e1d9",
        "reportUrl" : "https://Areso.github.io/Oblache/328//#testresult/d84cd8d5bd2e1d9",
        "status" : "passed",
        "time" : {
          "start" : 1741138648394,
          "stop" : 1741138648715,
          "duration" : 321
        }
      }, {
        "uid" : "10bab49b0341a5a9",
        "reportUrl" : "https://Areso.github.io/Oblache/327//#testresult/10bab49b0341a5a9",
        "status" : "passed",
        "time" : {
          "start" : 1741052259184,
          "stop" : 1741052259619,
          "duration" : 435
        }
      }, {
        "uid" : "1b35585f2723b167",
        "reportUrl" : "https://Areso.github.io/Oblache/326//#testresult/1b35585f2723b167",
        "status" : "passed",
        "time" : {
          "start" : 1740965933173,
          "stop" : 1740965933487,
          "duration" : 314
        }
      }, {
        "uid" : "b8539abea1d2133e",
        "reportUrl" : "https://Areso.github.io/Oblache/325//#testresult/b8539abea1d2133e",
        "status" : "passed",
        "time" : {
          "start" : 1740879633264,
          "stop" : 1740879633658,
          "duration" : 394
        }
      }, {
        "uid" : "118558e4247acc5c",
        "reportUrl" : "https://Areso.github.io/Oblache/324//#testresult/118558e4247acc5c",
        "status" : "passed",
        "time" : {
          "start" : 1740793304935,
          "stop" : 1740793305303,
          "duration" : 368
        }
      }, {
        "uid" : "f966b1ba780708d7",
        "reportUrl" : "https://Areso.github.io/Oblache/323//#testresult/f966b1ba780708d7",
        "status" : "passed",
        "time" : {
          "start" : 1740706586842,
          "stop" : 1740706587214,
          "duration" : 372
        }
      }, {
        "uid" : "4e3c42ea98d01166",
        "reportUrl" : "https://Areso.github.io/Oblache/322//#testresult/4e3c42ea98d01166",
        "status" : "passed",
        "time" : {
          "start" : 1740620171991,
          "stop" : 1740620172411,
          "duration" : 420
        }
      }, {
        "uid" : "f0a785c3df0e3273",
        "reportUrl" : "https://Areso.github.io/Oblache/321//#testresult/f0a785c3df0e3273",
        "status" : "passed",
        "time" : {
          "start" : 1740533294176,
          "stop" : 1740533294541,
          "duration" : 365
        }
      }, {
        "uid" : "1a34f1f372814f77",
        "reportUrl" : "https://Areso.github.io/Oblache/320//#testresult/1a34f1f372814f77",
        "status" : "passed",
        "time" : {
          "start" : 1740447381930,
          "stop" : 1740447382428,
          "duration" : 498
        }
      }, {
        "uid" : "c4b34e986f60af94",
        "reportUrl" : "https://Areso.github.io/Oblache/319//#testresult/c4b34e986f60af94",
        "status" : "passed",
        "time" : {
          "start" : 1740361009254,
          "stop" : 1740361009563,
          "duration" : 309
        }
      }, {
        "uid" : "be169f7129762c90",
        "reportUrl" : "https://Areso.github.io/Oblache/318//#testresult/be169f7129762c90",
        "status" : "passed",
        "time" : {
          "start" : 1740274767199,
          "stop" : 1740274767694,
          "duration" : 495
        }
      }, {
        "uid" : "40c9b4e320e05f59",
        "reportUrl" : "https://Areso.github.io/Oblache/317//#testresult/40c9b4e320e05f59",
        "status" : "passed",
        "time" : {
          "start" : 1740187463347,
          "stop" : 1740187463671,
          "duration" : 324
        }
      }, {
        "uid" : "38903235e21acfed",
        "reportUrl" : "https://Areso.github.io/Oblache/316//#testresult/38903235e21acfed",
        "status" : "passed",
        "time" : {
          "start" : 1740101226635,
          "stop" : 1740101227274,
          "duration" : 639
        }
      }, {
        "uid" : "6ca495bc7e058409",
        "reportUrl" : "https://Areso.github.io/Oblache/315//#testresult/6ca495bc7e058409",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740014798569,
          "stop" : 1740014798936,
          "duration" : 367
        }
      }, {
        "uid" : "cc0a10275612159e",
        "reportUrl" : "https://Areso.github.io/Oblache/314//#testresult/cc0a10275612159e",
        "status" : "passed",
        "time" : {
          "start" : 1739928387282,
          "stop" : 1739928387661,
          "duration" : 379
        }
      }, {
        "uid" : "ba5b61d664529a5a",
        "reportUrl" : "https://Areso.github.io/Oblache/313//#testresult/ba5b61d664529a5a",
        "status" : "passed",
        "time" : {
          "start" : 1739841949544,
          "stop" : 1739841949883,
          "duration" : 339
        }
      }, {
        "uid" : "19ace164e8be40a2",
        "reportUrl" : "https://Areso.github.io/Oblache/312//#testresult/19ace164e8be40a2",
        "status" : "passed",
        "time" : {
          "start" : 1739756190631,
          "stop" : 1739756191139,
          "duration" : 508
        }
      }, {
        "uid" : "fd63a1c370935bb7",
        "reportUrl" : "https://Areso.github.io/Oblache/311//#testresult/fd63a1c370935bb7",
        "status" : "passed",
        "time" : {
          "start" : 1739669984768,
          "stop" : 1739669985290,
          "duration" : 522
        }
      }, {
        "uid" : "5cec69d5d05cc5bc",
        "reportUrl" : "https://Areso.github.io/Oblache/310//#testresult/5cec69d5d05cc5bc",
        "status" : "passed",
        "time" : {
          "start" : 1739582702348,
          "stop" : 1739582702761,
          "duration" : 413
        }
      }, {
        "uid" : "d496ece3fce1122",
        "reportUrl" : "https://Areso.github.io/Oblache/309//#testresult/d496ece3fce1122",
        "status" : "passed",
        "time" : {
          "start" : 1739496351478,
          "stop" : 1739496351821,
          "duration" : 343
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "beb00af38074922e.json",
  "parameterValues" : [ ]
}