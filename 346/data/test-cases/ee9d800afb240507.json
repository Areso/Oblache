{
  "uid" : "ee9d800afb240507",
  "name" : "POST create_docker_container_without_token",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_create_docker_container_without_token",
  "historyId" : "f833256fb8ca072b26357ead25c8b408",
  "time" : {
    "start" : 1742694305651,
    "stop" : 1742694305963,
    "duration" : 312
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 400",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f83683e5df0>\n\n    @allure.title('POST create_docker_container_without_token')\n    def test_post_create_docker_container_without_token(self):\n        result = API.post_create_docker_container(token='incorrect_token')\n>       Checking.check_status_code(result, 401)\n\ntests_api/test_bd.py:404: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 401\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 400",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f83683e5df0>\n\n    @allure.title('POST create_docker_container_without_token')\n    def test_post_create_docker_container_without_token(self):\n        result = API.post_create_docker_container(token='incorrect_token')\n>       Checking.check_status_code(result, 401)\n\ntests_api/test_bd.py:404: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 401\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_create_docker_container",
      "time" : {
        "start" : 1742694305651,
        "stop" : 1742694305963,
        "duration" : 312
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_create",
        "time" : {
          "start" : 1742694305963,
          "stop" : 1742694305963,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1742694305963,
          "stop" : 1742694305963,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'incorrect_token'}",
          "time" : {
            "start" : 1742694305963,
            "stop" : 1742694305963,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"docker_image\": \"nginx\", \"int_ports\": \"80\", \"env\": 3, \"region\": 3}",
          "time" : {
            "start" : 1742694305963,
            "stop" : 1742694305963,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1742694305963,
          "stop" : 1742694305963,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 400",
          "time" : {
            "start" : 1742694305963,
            "stop" : 1742694305963,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n    \"msg_code\": -1,\n    \"msg\": \"endpoint is disabled\"\n}\n",
          "time" : {
            "start" : 1742694305963,
            "stop" : 1742694305963,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 401 == Response status code: 400",
      "time" : {
        "start" : 1742694305963,
        "stop" : 1742694305963,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 400\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 9,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1444-853"
  }, {
    "name" : "thread",
    "value" : "2500-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 151,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 70,
        "unknown" : 0,
        "total" : 224
      },
      "items" : [ {
        "uid" : "4c6349afa171885f",
        "reportUrl" : "https://Areso.github.io/Oblache/345//#testresult/4c6349afa171885f",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1742607478462,
          "stop" : 1742607478777,
          "duration" : 315
        }
      }, {
        "uid" : "8bd869d6ab49ca8b",
        "reportUrl" : "https://Areso.github.io/Oblache/344//#testresult/8bd869d6ab49ca8b",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1742521228290,
          "stop" : 1742521228654,
          "duration" : 364
        }
      }, {
        "uid" : "624f61ad026634c0",
        "reportUrl" : "https://Areso.github.io/Oblache/343//#testresult/624f61ad026634c0",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1742434729361,
          "stop" : 1742434729670,
          "duration" : 309
        }
      }, {
        "uid" : "1676c83f7af91292",
        "reportUrl" : "https://Areso.github.io/Oblache/342//#testresult/1676c83f7af91292",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1742348396255,
          "stop" : 1742348396568,
          "duration" : 313
        }
      }, {
        "uid" : "8cf8a98c446fe48b",
        "reportUrl" : "https://Areso.github.io/Oblache/341//#testresult/8cf8a98c446fe48b",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1742261975903,
          "stop" : 1742261976232,
          "duration" : 329
        }
      }, {
        "uid" : "1ccadceba645e25a",
        "reportUrl" : "https://Areso.github.io/Oblache/340//#testresult/1ccadceba645e25a",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1742175712455,
          "stop" : 1742175712967,
          "duration" : 512
        }
      }, {
        "uid" : "4af14befe19478a8",
        "reportUrl" : "https://Areso.github.io/Oblache/339//#testresult/4af14befe19478a8",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1742089467685,
          "stop" : 1742089468201,
          "duration" : 516
        }
      }, {
        "uid" : "916fc2213e6ae34f",
        "reportUrl" : "https://Areso.github.io/Oblache/338//#testresult/916fc2213e6ae34f",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1742002610129,
          "stop" : 1742002610448,
          "duration" : 319
        }
      }, {
        "uid" : "c639d75a2c371b60",
        "reportUrl" : "https://Areso.github.io/Oblache/337//#testresult/c639d75a2c371b60",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1741916257954,
          "stop" : 1741916258321,
          "duration" : 367
        }
      }, {
        "uid" : "4410d88a7286d53e",
        "reportUrl" : "https://Areso.github.io/Oblache/336//#testresult/4410d88a7286d53e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1741829956387,
          "stop" : 1741829956707,
          "duration" : 320
        }
      }, {
        "uid" : "740aec4843745a74",
        "reportUrl" : "https://Areso.github.io/Oblache/335//#testresult/740aec4843745a74",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1741743464893,
          "stop" : 1741743465409,
          "duration" : 516
        }
      }, {
        "uid" : "895417fb84408289",
        "reportUrl" : "https://Areso.github.io/Oblache/334//#testresult/895417fb84408289",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1741657128443,
          "stop" : 1741657128806,
          "duration" : 363
        }
      }, {
        "uid" : "ac59e3d69a169697",
        "reportUrl" : "https://Areso.github.io/Oblache/333//#testresult/ac59e3d69a169697",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1741569408925,
          "stop" : 1741569409304,
          "duration" : 379
        }
      }, {
        "uid" : "b26e661f385900b2",
        "reportUrl" : "https://Areso.github.io/Oblache/332//#testresult/b26e661f385900b2",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1741483135013,
          "stop" : 1741483135327,
          "duration" : 314
        }
      }, {
        "uid" : "99840f207b419c18",
        "reportUrl" : "https://Areso.github.io/Oblache/331//#testresult/99840f207b419c18",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1741396383312,
          "stop" : 1741396383821,
          "duration" : 509
        }
      }, {
        "uid" : "25349e35e71b4dfd",
        "reportUrl" : "https://Areso.github.io/Oblache/330//#testresult/25349e35e71b4dfd",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1741311521067,
          "stop" : 1741311521372,
          "duration" : 305
        }
      }, {
        "uid" : "d679fcd38809b024",
        "reportUrl" : "https://Areso.github.io/Oblache/329//#testresult/d679fcd38809b024",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1741225089108,
          "stop" : 1741225089485,
          "duration" : 377
        }
      }, {
        "uid" : "7f4da4587dd405ae",
        "reportUrl" : "https://Areso.github.io/Oblache/328//#testresult/7f4da4587dd405ae",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1741138662096,
          "stop" : 1741138662409,
          "duration" : 313
        }
      }, {
        "uid" : "bc0c213804c2f61f",
        "reportUrl" : "https://Areso.github.io/Oblache/327//#testresult/bc0c213804c2f61f",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1741052275418,
          "stop" : 1741052275794,
          "duration" : 376
        }
      }, {
        "uid" : "bfff94631a48c37c",
        "reportUrl" : "https://Areso.github.io/Oblache/326//#testresult/bfff94631a48c37c",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740965947051,
          "stop" : 1740965947357,
          "duration" : 306
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "ee9d800afb240507.json",
  "parameterValues" : [ ]
}