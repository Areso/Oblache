{
  "uid" : "25d3647cd0f7a09f",
  "name" : "POST login/is_logged/logout",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_login_is_logged_logout",
  "historyId" : "5acbe9eedbdaaded55cefbf9042fc1fd",
  "time" : {
    "start" : 1731029137437,
    "stop" : 1731029137437,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
  "statusTrace" : "self = <Response [502]>, kwargs = {}\n\n    def json(self, **kwargs):\n        r\"\"\"Returns the json-encoded content of a response, if any.\n    \n        :param \\*\\*kwargs: Optional arguments that ``json.loads`` takes.\n        :raises requests.exceptions.JSONDecodeError: If the response body does not\n            contain valid json.\n        \"\"\"\n    \n        if not self.encoding and self.content and len(self.content) > 3:\n            # No encoding set. JSON RFC 4627 section 3 states we should expect\n            # UTF-8, -16 or -32. Detect which one to use; If the detection or\n            # decoding fails, fall back to `self.text` (using charset_normalizer to make\n            # a best guess).\n            encoding = guess_json_utf(self.content)\n            if encoding is not None:\n                try:\n                    return complexjson.loads(self.content.decode(encoding), **kwargs)\n                except UnicodeDecodeError:\n                    # Wrong UTF codec detected; usually because it's not UTF-8\n                    # but some other 8-bit codec.  This is an RFC violation,\n                    # and the server didn't bother to tell us what codec *was*\n                    # used.\n                    pass\n                except JSONDecodeError as e:\n                    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\n    \n        try:\n>           return complexjson.loads(self.text, **kwargs)\n\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/requests/models.py:974: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fad5d72ef90>\ns = '<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/json/decoder.py:355: JSONDecodeError\n\nDuring handling of the above exception, another exception occurred:\n\n    @pytest.fixture()\n    def get_token():\n        \"\"\"\n        Method return:\\n\n        token: str\\n\n        body: dict\\n\n        new_password: str\\n\n        old_password: str\\n\n        email: str\n        :returns: token: str, body: dict, new_password: str, old_password:str, email: str\n        \"\"\"\n        load_dotenv()\n        email = os.getenv('EMAIL')\n        old_password = os.getenv('PASSWORD')\n        new_password = '123456789'\n        try:\n            body = {\"email\": email, \"password\": f'{old_password}'}\n            result = requests.post('https://dbend.areso.pro/login', json=body)\n            token = result.json()['token']\n            if token != {}:\n                new_password, old_password = old_password, new_password\n            Checking.check_status_code(result, 200)\n            return token, body, new_password, old_password, email\n        except Exception as ex:\n            print(ex)\n            old_password, new_password = new_password, old_password\n            body = {\"email\": email, \"password\": f'{old_password}'}\n            result = requests.post('https://dbend.areso.pro/login', json=body)\n>           token = result.json()['token']\n\nconftest.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>, kwargs = {}\n\n    def json(self, **kwargs):\n        r\"\"\"Returns the json-encoded content of a response, if any.\n    \n        :param \\*\\*kwargs: Optional arguments that ``json.loads`` takes.\n        :raises requests.exceptions.JSONDecodeError: If the response body does not\n            contain valid json.\n        \"\"\"\n    \n        if not self.encoding and self.content and len(self.content) > 3:\n            # No encoding set. JSON RFC 4627 section 3 states we should expect\n            # UTF-8, -16 or -32. Detect which one to use; If the detection or\n            # decoding fails, fall back to `self.text` (using charset_normalizer to make\n            # a best guess).\n            encoding = guess_json_utf(self.content)\n            if encoding is not None:\n                try:\n                    return complexjson.loads(self.content.decode(encoding), **kwargs)\n                except UnicodeDecodeError:\n                    # Wrong UTF codec detected; usually because it's not UTF-8\n                    # but some other 8-bit codec.  This is an RFC violation,\n                    # and the server didn't bother to tell us what codec *was*\n                    # used.\n                    pass\n                except JSONDecodeError as e:\n                    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\n    \n        try:\n            return complexjson.loads(self.text, **kwargs)\n        except JSONDecodeError as e:\n            # Catch JSON-related errors and raise as requests.JSONDecodeError\n            # This aliases json.JSONDecodeError and simplejson.JSONDecodeError\n>           raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\nE           requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/requests/models.py:978: JSONDecodeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_token",
    "time" : {
      "start" : 1731029137437,
      "stop" : 1731029138569,
      "duration" : 1132
    },
    "status" : "broken",
    "statusMessage" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 902, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/Oblache/Oblache/conftest.py\", line 40, in get_token\n    token = result.json()['token']\n            ^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/requests/models.py\", line 978, in json\n    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az2022-763"
  }, {
    "name" : "thread",
    "value" : "2238-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 5,
        "skipped" : 0,
        "passed" : 85,
        "unknown" : 0,
        "total" : 90
      },
      "items" : [ {
        "uid" : "2c729ff5ca5aabe2",
        "reportUrl" : "https://Areso.github.io/Oblache/210//#testresult/2c729ff5ca5aabe2",
        "status" : "passed",
        "time" : {
          "start" : 1730942729746,
          "stop" : 1730942731283,
          "duration" : 1537
        }
      }, {
        "uid" : "5c6b99e54bbfba9a",
        "reportUrl" : "https://Areso.github.io/Oblache/209//#testresult/5c6b99e54bbfba9a",
        "status" : "passed",
        "time" : {
          "start" : 1730856285784,
          "stop" : 1730856286689,
          "duration" : 905
        }
      }, {
        "uid" : "504f1268f6610ca6",
        "reportUrl" : "https://Areso.github.io/Oblache/208//#testresult/504f1268f6610ca6",
        "status" : "passed",
        "time" : {
          "start" : 1730769920192,
          "stop" : 1730769921754,
          "duration" : 1562
        }
      }, {
        "uid" : "1bdd79c3e113c1d2",
        "reportUrl" : "https://Areso.github.io/Oblache/207//#testresult/1bdd79c3e113c1d2",
        "status" : "passed",
        "time" : {
          "start" : 1730684189147,
          "stop" : 1730684190081,
          "duration" : 934
        }
      }, {
        "uid" : "b2d37532132b2bdd",
        "reportUrl" : "https://Areso.github.io/Oblache/206//#testresult/b2d37532132b2bdd",
        "status" : "passed",
        "time" : {
          "start" : 1730597954486,
          "stop" : 1730597955426,
          "duration" : 940
        }
      }, {
        "uid" : "fee93387c52ef07b",
        "reportUrl" : "https://Areso.github.io/Oblache/205//#testresult/fee93387c52ef07b",
        "status" : "passed",
        "time" : {
          "start" : 1730510711896,
          "stop" : 1730510713423,
          "duration" : 1527
        }
      }, {
        "uid" : "65602e448b3ec94c",
        "reportUrl" : "https://Areso.github.io/Oblache/204//#testresult/65602e448b3ec94c",
        "status" : "passed",
        "time" : {
          "start" : 1730425249889,
          "stop" : 1730425251414,
          "duration" : 1525
        }
      }, {
        "uid" : "f19158e841a9f490",
        "reportUrl" : "https://Areso.github.io/Oblache/203//#testresult/f19158e841a9f490",
        "status" : "passed",
        "time" : {
          "start" : 1730338085180,
          "stop" : 1730338086740,
          "duration" : 1560
        }
      }, {
        "uid" : "a230b7319e90a346",
        "reportUrl" : "https://Areso.github.io/Oblache/202//#testresult/a230b7319e90a346",
        "status" : "passed",
        "time" : {
          "start" : 1730251627266,
          "stop" : 1730251628778,
          "duration" : 1512
        }
      }, {
        "uid" : "3c4f0354f2a32531",
        "reportUrl" : "https://Areso.github.io/Oblache/201//#testresult/3c4f0354f2a32531",
        "status" : "passed",
        "time" : {
          "start" : 1730165296193,
          "stop" : 1730165297082,
          "duration" : 889
        }
      }, {
        "uid" : "f4f8ab748f95ac14",
        "reportUrl" : "https://Areso.github.io/Oblache/200//#testresult/f4f8ab748f95ac14",
        "status" : "passed",
        "time" : {
          "start" : 1730079471101,
          "stop" : 1730079472650,
          "duration" : 1549
        }
      }, {
        "uid" : "c409b536f3e8ff94",
        "reportUrl" : "https://Areso.github.io/Oblache/199//#testresult/c409b536f3e8ff94",
        "status" : "passed",
        "time" : {
          "start" : 1729993152979,
          "stop" : 1729993153935,
          "duration" : 956
        }
      }, {
        "uid" : "979aad69634039b2",
        "reportUrl" : "https://Areso.github.io/Oblache/198//#testresult/979aad69634039b2",
        "status" : "passed",
        "time" : {
          "start" : 1729905851241,
          "stop" : 1729905852762,
          "duration" : 1521
        }
      }, {
        "uid" : "f7894f01ca9380ff",
        "reportUrl" : "https://Areso.github.io/Oblache/197//#testresult/f7894f01ca9380ff",
        "status" : "passed",
        "time" : {
          "start" : 1729819637461,
          "stop" : 1729819638526,
          "duration" : 1065
        }
      }, {
        "uid" : "f5e60e09ab40a590",
        "reportUrl" : "https://Areso.github.io/Oblache/196//#testresult/f5e60e09ab40a590",
        "status" : "passed",
        "time" : {
          "start" : 1729733167112,
          "stop" : 1729733168630,
          "duration" : 1518
        }
      }, {
        "uid" : "9b66a242d916dfd1",
        "reportUrl" : "https://Areso.github.io/Oblache/195//#testresult/9b66a242d916dfd1",
        "status" : "passed",
        "time" : {
          "start" : 1729646748263,
          "stop" : 1729646749155,
          "duration" : 892
        }
      }, {
        "uid" : "3604f66bf2ed5fd1",
        "reportUrl" : "https://Areso.github.io/Oblache/194//#testresult/3604f66bf2ed5fd1",
        "status" : "passed",
        "time" : {
          "start" : 1729560421074,
          "stop" : 1729560422028,
          "duration" : 954
        }
      }, {
        "uid" : "30630f7fb7cc2c66",
        "reportUrl" : "https://Areso.github.io/Oblache/193//#testresult/30630f7fb7cc2c66",
        "status" : "passed",
        "time" : {
          "start" : 1729474096409,
          "stop" : 1729474097516,
          "duration" : 1107
        }
      }, {
        "uid" : "b5d581759b7173a0",
        "reportUrl" : "https://Areso.github.io/Oblache/192//#testresult/b5d581759b7173a0",
        "status" : "passed",
        "time" : {
          "start" : 1729388403129,
          "stop" : 1729388404083,
          "duration" : 954
        }
      }, {
        "uid" : "b7d7f10fa052f85d",
        "reportUrl" : "https://Areso.github.io/Oblache/191//#testresult/b7d7f10fa052f85d",
        "status" : "passed",
        "time" : {
          "start" : 1729301110000,
          "stop" : 1729301110939,
          "duration" : 939
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "25d3647cd0f7a09f.json",
  "parameterValues" : [ ]
}