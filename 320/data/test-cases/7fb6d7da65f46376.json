{
  "uid" : "7fb6d7da65f46376",
  "name" : "POST create_docker_container_without_token",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_create_docker_container_without_token",
  "historyId" : "f833256fb8ca072b26357ead25c8b408",
  "time" : {
    "start" : 1740447403724,
    "stop" : 1740447404220,
    "duration" : 496
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 400",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fc4b0fafe90>\n\n    @allure.title('POST create_docker_container_without_token')\n    def test_post_create_docker_container_without_token(self):\n        result = API.post_create_docker_container(token='incorrect_token')\n>       Checking.check_status_code(result, 401)\n\ntests_api/test_bd.py:404: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 401\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 400",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fc4b0fafe90>\n\n    @allure.title('POST create_docker_container_without_token')\n    def test_post_create_docker_container_without_token(self):\n        result = API.post_create_docker_container(token='incorrect_token')\n>       Checking.check_status_code(result, 401)\n\ntests_api/test_bd.py:404: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 401\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_create_docker_container",
      "time" : {
        "start" : 1740447403724,
        "stop" : 1740447404219,
        "duration" : 495
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_create",
        "time" : {
          "start" : 1740447404219,
          "stop" : 1740447404219,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1740447404219,
          "stop" : 1740447404219,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Url: https://dbend.areso.pro/container_create",
          "time" : {
            "start" : 1740447404219,
            "stop" : 1740447404219,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'incorrect_token'}",
          "time" : {
            "start" : 1740447404219,
            "stop" : 1740447404219,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"docker_image\": \"nginx\", \"int_ports\": \"80\", \"env\": 3, \"region\": 3}",
          "time" : {
            "start" : 1740447404219,
            "stop" : 1740447404219,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 3,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1740447404219,
          "stop" : 1740447404219,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 400",
          "time" : {
            "start" : 1740447404219,
            "stop" : 1740447404219,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n    \"msg_code\": -1,\n    \"msg\": \"endpoint is disabled\"\n}\n",
          "time" : {
            "start" : 1740447404219,
            "stop" : 1740447404219,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 8,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 401 == Response status code: 400",
      "time" : {
        "start" : 1740447404219,
        "stop" : 1740447404219,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 400\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 10,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1675-162"
  }, {
    "name" : "thread",
    "value" : "2452-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 125,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 70,
        "unknown" : 0,
        "total" : 198
      },
      "items" : [ {
        "uid" : "91a4c4cf008bb842",
        "reportUrl" : "https://Areso.github.io/Oblache/319//#testresult/91a4c4cf008bb842",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740361022732,
          "stop" : 1740361023042,
          "duration" : 310
        }
      }, {
        "uid" : "7ca56b9379e4cb16",
        "reportUrl" : "https://Areso.github.io/Oblache/318//#testresult/7ca56b9379e4cb16",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740274788956,
          "stop" : 1740274789465,
          "duration" : 509
        }
      }, {
        "uid" : "f269f5c4fbf5e412",
        "reportUrl" : "https://Areso.github.io/Oblache/317//#testresult/f269f5c4fbf5e412",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740187478148,
          "stop" : 1740187478456,
          "duration" : 308
        }
      }, {
        "uid" : "4e7e0f5d660b8508",
        "reportUrl" : "https://Areso.github.io/Oblache/316//#testresult/4e7e0f5d660b8508",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740101249268,
          "stop" : 1740101249788,
          "duration" : 520
        }
      }, {
        "uid" : "fc9b6d76215aa59e",
        "reportUrl" : "https://Areso.github.io/Oblache/315//#testresult/fc9b6d76215aa59e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740014814293,
          "stop" : 1740014814674,
          "duration" : 381
        }
      }, {
        "uid" : "e29fcb64c38ac7",
        "reportUrl" : "https://Areso.github.io/Oblache/314//#testresult/e29fcb64c38ac7",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1739928403483,
          "stop" : 1739928403845,
          "duration" : 362
        }
      }, {
        "uid" : "d7fb2584651098db",
        "reportUrl" : "https://Areso.github.io/Oblache/313//#testresult/d7fb2584651098db",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1739841963304,
          "stop" : 1739841963611,
          "duration" : 307
        }
      }, {
        "uid" : "ea500982eec42247",
        "reportUrl" : "https://Areso.github.io/Oblache/312//#testresult/ea500982eec42247",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1739756212958,
          "stop" : 1739756213473,
          "duration" : 515
        }
      }, {
        "uid" : "8535a724060d4117",
        "reportUrl" : "https://Areso.github.io/Oblache/311//#testresult/8535a724060d4117",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1739670006817,
          "stop" : 1739670007320,
          "duration" : 503
        }
      }, {
        "uid" : "36c83cb76d98635",
        "reportUrl" : "https://Areso.github.io/Oblache/310//#testresult/36c83cb76d98635",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1739582718608,
          "stop" : 1739582718969,
          "duration" : 361
        }
      }, {
        "uid" : "b9aed9b3d661cc3d",
        "reportUrl" : "https://Areso.github.io/Oblache/309//#testresult/b9aed9b3d661cc3d",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1739496366274,
          "stop" : 1739496366594,
          "duration" : 320
        }
      }, {
        "uid" : "ee6faa2f630033d6",
        "reportUrl" : "https://Areso.github.io/Oblache/308//#testresult/ee6faa2f630033d6",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1739409994559,
          "stop" : 1739409995060,
          "duration" : 501
        }
      }, {
        "uid" : "13116e7c106ff5a8",
        "reportUrl" : "https://Areso.github.io/Oblache/307//#testresult/13116e7c106ff5a8",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1739323555033,
          "stop" : 1739323555348,
          "duration" : 315
        }
      }, {
        "uid" : "34d6619096dbcc8f",
        "reportUrl" : "https://Areso.github.io/Oblache/306//#testresult/34d6619096dbcc8f",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1739240202084,
          "stop" : 1739240262383,
          "duration" : 60299
        }
      }, {
        "uid" : "e36afb495eef050b",
        "reportUrl" : "https://Areso.github.io/Oblache/305//#testresult/e36afb495eef050b",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1739153867329,
          "stop" : 1739153927632,
          "duration" : 60303
        }
      }, {
        "uid" : "196a8bbb2b904dc6",
        "reportUrl" : "https://Areso.github.io/Oblache/304//#testresult/196a8bbb2b904dc6",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1739068069069,
          "stop" : 1739068129448,
          "duration" : 60379
        }
      }, {
        "uid" : "5781483975fecf33",
        "reportUrl" : "https://Areso.github.io/Oblache/303//#testresult/5781483975fecf33",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1738980884148,
          "stop" : 1738980944686,
          "duration" : 60538
        }
      }, {
        "uid" : "c175a9d28113b2d8",
        "reportUrl" : "https://Areso.github.io/Oblache/302//#testresult/c175a9d28113b2d8",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1738894619839,
          "stop" : 1738894680179,
          "duration" : 60340
        }
      }, {
        "uid" : "890d9f1603ee2680",
        "reportUrl" : "https://Areso.github.io/Oblache/301//#testresult/890d9f1603ee2680",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1738808216226,
          "stop" : 1738808276581,
          "duration" : 60355
        }
      }, {
        "uid" : "bb4ec8468a7bb9f0",
        "reportUrl" : "https://Areso.github.io/Oblache/300//#testresult/bb4ec8468a7bb9f0",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1738721804488,
          "stop" : 1738721864811,
          "duration" : 60323
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "7fb6d7da65f46376.json",
  "parameterValues" : [ ]
}