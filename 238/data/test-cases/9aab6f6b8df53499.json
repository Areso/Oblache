{
  "uid" : "9aab6f6b8df53499",
  "name" : "POST create_docker_container_without_token",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_create_docker_container_without_token",
  "historyId" : "f833256fb8ca072b26357ead25c8b408",
  "time" : {
    "start" : 1733362947442,
    "stop" : 1733362947919,
    "duration" : 477
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 400",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f99ae28f890>\n\n    @allure.title('POST create_docker_container_without_token')\n    def test_post_create_docker_container_without_token(self):\n        result = API.post_create_docker_container(token='incorrect_token')\n>       Checking.check_status_code(result, 401)\n\ntests_api/test_bd.py:404: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 401\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 400",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f99ae28f890>\n\n    @allure.title('POST create_docker_container_without_token')\n    def test_post_create_docker_container_without_token(self):\n        result = API.post_create_docker_container(token='incorrect_token')\n>       Checking.check_status_code(result, 401)\n\ntests_api/test_bd.py:404: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 401\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_create_docker_container",
      "time" : {
        "start" : 1733362947442,
        "stop" : 1733362947919,
        "duration" : 477
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_create",
        "time" : {
          "start" : 1733362947919,
          "stop" : 1733362947919,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1733362947919,
          "stop" : 1733362947919,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Url: https://dbend.areso.pro/container_create",
          "time" : {
            "start" : 1733362947919,
            "stop" : 1733362947919,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'incorrect_token'}",
          "time" : {
            "start" : 1733362947919,
            "stop" : 1733362947919,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"docker_image\": \"nginx\", \"int_ports\": \"80\", \"env\": 3, \"region\": 3}",
          "time" : {
            "start" : 1733362947919,
            "stop" : 1733362947919,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 3,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1733362947919,
          "stop" : 1733362947919,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 400",
          "time" : {
            "start" : 1733362947919,
            "stop" : 1733362947919,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n    \"msg_code\": -1,\n    \"msg\": \"endpoint is disabled\"\n}\n",
          "time" : {
            "start" : 1733362947919,
            "stop" : 1733362947919,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 8,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 401 == Response status code: 400",
      "time" : {
        "start" : 1733362947919,
        "stop" : 1733362947919,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 400\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 10,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1240-142"
  }, {
    "name" : "thread",
    "value" : "2243-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 44,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 70,
        "unknown" : 0,
        "total" : 117
      },
      "items" : [ {
        "uid" : "91990c0902b48304",
        "reportUrl" : "https://Areso.github.io/Oblache/237//#testresult/91990c0902b48304",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1733276574830,
          "stop" : 1733276575344,
          "duration" : 514
        }
      }, {
        "uid" : "7821d888e9407401",
        "reportUrl" : "https://Areso.github.io/Oblache/236//#testresult/7821d888e9407401",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1733190140933,
          "stop" : 1733190141292,
          "duration" : 359
        }
      }, {
        "uid" : "6a98a4bf2f86fdb0",
        "reportUrl" : "https://Areso.github.io/Oblache/235//#testresult/6a98a4bf2f86fdb0",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1733103823405,
          "stop" : 1733103823708,
          "duration" : 303
        }
      }, {
        "uid" : "c520413fd26993cb",
        "reportUrl" : "https://Areso.github.io/Oblache/234//#testresult/c520413fd26993cb",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1733018074510,
          "stop" : 1733018075024,
          "duration" : 514
        }
      }, {
        "uid" : "cfd151d879d7cf73",
        "reportUrl" : "https://Areso.github.io/Oblache/233//#testresult/cfd151d879d7cf73",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1732930675780,
          "stop" : 1732930676137,
          "duration" : 357
        }
      }, {
        "uid" : "a17fb2f38a49a96d",
        "reportUrl" : "https://Areso.github.io/Oblache/232//#testresult/a17fb2f38a49a96d",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1732844433924,
          "stop" : 1732844434443,
          "duration" : 519
        }
      }, {
        "uid" : "8aa76b45d3e26b63",
        "reportUrl" : "https://Areso.github.io/Oblache/231//#testresult/8aa76b45d3e26b63",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1732758035747,
          "stop" : 1732758036113,
          "duration" : 366
        }
      }, {
        "uid" : "719b237997e1e014",
        "reportUrl" : "https://Areso.github.io/Oblache/230//#testresult/719b237997e1e014",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1732671669413,
          "stop" : 1732671669911,
          "duration" : 498
        }
      }, {
        "uid" : "50a850e881997e37",
        "reportUrl" : "https://Areso.github.io/Oblache/229//#testresult/50a850e881997e37",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1732585159537,
          "stop" : 1732585159850,
          "duration" : 313
        }
      }, {
        "uid" : "e3e7afeb00a3ad9a",
        "reportUrl" : "https://Areso.github.io/Oblache/228//#testresult/e3e7afeb00a3ad9a",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1732498820603,
          "stop" : 1732498820960,
          "duration" : 357
        }
      }, {
        "uid" : "b8bde1919f91c4d2",
        "reportUrl" : "https://Areso.github.io/Oblache/227//#testresult/b8bde1919f91c4d2",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1732412593820,
          "stop" : 1732412594343,
          "duration" : 523
        }
      }, {
        "uid" : "ad145c1d653987a9",
        "reportUrl" : "https://Areso.github.io/Oblache/226//#testresult/ad145c1d653987a9",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1732325319109,
          "stop" : 1732325319429,
          "duration" : 320
        }
      }, {
        "uid" : "206d30b81fb49d67",
        "reportUrl" : "https://Areso.github.io/Oblache/225//#testresult/206d30b81fb49d67",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1732239540288,
          "stop" : 1732239540659,
          "duration" : 371
        }
      }, {
        "uid" : "857f800c38b789e8",
        "reportUrl" : "https://Areso.github.io/Oblache/224//#testresult/857f800c38b789e8",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1732153047490,
          "stop" : 1732153047795,
          "duration" : 305
        }
      }, {
        "uid" : "b006024572d6d9eb",
        "reportUrl" : "https://Areso.github.io/Oblache/223//#testresult/b006024572d6d9eb",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1732066670951,
          "stop" : 1732066671261,
          "duration" : 310
        }
      }, {
        "uid" : "75e2fd155a6ca23f",
        "reportUrl" : "https://Areso.github.io/Oblache/222//#testresult/75e2fd155a6ca23f",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1731980345497,
          "stop" : 1731980345803,
          "duration" : 306
        }
      }, {
        "uid" : "582f1bc44461b538",
        "reportUrl" : "https://Areso.github.io/Oblache/221//#testresult/582f1bc44461b538",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1731894043168,
          "stop" : 1731894043486,
          "duration" : 318
        }
      }, {
        "uid" : "847279686783dd7b",
        "reportUrl" : "https://Areso.github.io/Oblache/220//#testresult/847279686783dd7b",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1731807753514,
          "stop" : 1731807753885,
          "duration" : 371
        }
      }, {
        "uid" : "ab96e04d3a1056c0",
        "reportUrl" : "https://Areso.github.io/Oblache/219//#testresult/ab96e04d3a1056c0",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1731721341720,
          "stop" : 1731721342051,
          "duration" : 331
        }
      }, {
        "uid" : "fd834e1669d752b2",
        "reportUrl" : "https://Areso.github.io/Oblache/218//#testresult/fd834e1669d752b2",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1731634778080,
          "stop" : 1731634778583,
          "duration" : 503
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "9aab6f6b8df53499.json",
  "parameterValues" : [ ]
}