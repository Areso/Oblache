{
  "uid" : "b2be48f83ecefae9",
  "name" : "POST create_docker_container_without_token",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_create_docker_container_without_token",
  "historyId" : "f833256fb8ca072b26357ead25c8b408",
  "time" : {
    "start" : 1737681897689,
    "stop" : 1737681898199,
    "duration" : 510
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 400",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f7b8aec5670>\n\n    @allure.title('POST create_docker_container_without_token')\n    def test_post_create_docker_container_without_token(self):\n        result = API.post_create_docker_container(token='incorrect_token')\n>       Checking.check_status_code(result, 401)\n\ntests_api/test_bd.py:404: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 401\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 400",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f7b8aec5670>\n\n    @allure.title('POST create_docker_container_without_token')\n    def test_post_create_docker_container_without_token(self):\n        result = API.post_create_docker_container(token='incorrect_token')\n>       Checking.check_status_code(result, 401)\n\ntests_api/test_bd.py:404: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 401\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_create_docker_container",
      "time" : {
        "start" : 1737681897689,
        "stop" : 1737681898199,
        "duration" : 510
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_create",
        "time" : {
          "start" : 1737681898199,
          "stop" : 1737681898199,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1737681898199,
          "stop" : 1737681898199,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Url: https://dbend.areso.pro/container_create",
          "time" : {
            "start" : 1737681898199,
            "stop" : 1737681898199,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'incorrect_token'}",
          "time" : {
            "start" : 1737681898199,
            "stop" : 1737681898199,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"docker_image\": \"nginx\", \"int_ports\": \"80\", \"env\": 3, \"region\": 3}",
          "time" : {
            "start" : 1737681898199,
            "stop" : 1737681898199,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 3,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1737681898199,
          "stop" : 1737681898199,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 400",
          "time" : {
            "start" : 1737681898199,
            "stop" : 1737681898199,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n    \"msg_code\": -1,\n    \"msg\": \"endpoint is disabled\"\n}\n",
          "time" : {
            "start" : 1737681898199,
            "stop" : 1737681898199,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 8,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 401 == Response status code: 400",
      "time" : {
        "start" : 1737681898199,
        "stop" : 1737681898199,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 400\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 10,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1372-303"
  }, {
    "name" : "thread",
    "value" : "2431-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 93,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 70,
        "unknown" : 0,
        "total" : 166
      },
      "items" : [ {
        "uid" : "890df4cd17c7c318",
        "reportUrl" : "https://Areso.github.io/Oblache/287//#testresult/890df4cd17c7c318",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737595471450,
          "stop" : 1737595471811,
          "duration" : 361
        }
      }, {
        "uid" : "9fc2fd034fb988f0",
        "reportUrl" : "https://Areso.github.io/Oblache/286//#testresult/9fc2fd034fb988f0",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737509189417,
          "stop" : 1737509189920,
          "duration" : 503
        }
      }, {
        "uid" : "84c6ef1e4cec7b43",
        "reportUrl" : "https://Areso.github.io/Oblache/285//#testresult/84c6ef1e4cec7b43",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737422654073,
          "stop" : 1737422654390,
          "duration" : 317
        }
      }, {
        "uid" : "1d56509097b0f6ae",
        "reportUrl" : "https://Areso.github.io/Oblache/284//#testresult/1d56509097b0f6ae",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737336346896,
          "stop" : 1737336347257,
          "duration" : 361
        }
      }, {
        "uid" : "33dcd422a1f2f565",
        "reportUrl" : "https://Areso.github.io/Oblache/283//#testresult/33dcd422a1f2f565",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737250618283,
          "stop" : 1737250618643,
          "duration" : 360
        }
      }, {
        "uid" : "33f667c8bb5e74db",
        "reportUrl" : "https://Areso.github.io/Oblache/282//#testresult/33f667c8bb5e74db",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737163311790,
          "stop" : 1737163312107,
          "duration" : 317
        }
      }, {
        "uid" : "5d7315a98dc0927",
        "reportUrl" : "https://Areso.github.io/Oblache/281//#testresult/5d7315a98dc0927",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737077023352,
          "stop" : 1737077023670,
          "duration" : 318
        }
      }, {
        "uid" : "e445e93ff20f7df7",
        "reportUrl" : "https://Areso.github.io/Oblache/280//#testresult/e445e93ff20f7df7",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736990649854,
          "stop" : 1736990650290,
          "duration" : 436
        }
      }, {
        "uid" : "5182620aeff8b6f3",
        "reportUrl" : "https://Areso.github.io/Oblache/279//#testresult/5182620aeff8b6f3",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736904297676,
          "stop" : 1736904298032,
          "duration" : 356
        }
      }, {
        "uid" : "7cdc684e964a65be",
        "reportUrl" : "https://Areso.github.io/Oblache/278//#testresult/7cdc684e964a65be",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736817788048,
          "stop" : 1736817788364,
          "duration" : 316
        }
      }, {
        "uid" : "495d09693cc94b4d",
        "reportUrl" : "https://Areso.github.io/Oblache/277//#testresult/495d09693cc94b4d",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736732321829,
          "stop" : 1736732322192,
          "duration" : 363
        }
      }, {
        "uid" : "660c2fd1f1766d78",
        "reportUrl" : "https://Areso.github.io/Oblache/276//#testresult/660c2fd1f1766d78",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736646096251,
          "stop" : 1736646096572,
          "duration" : 321
        }
      }, {
        "uid" : "7d56db94020dfa82",
        "reportUrl" : "https://Areso.github.io/Oblache/275//#testresult/7d56db94020dfa82",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736558832641,
          "stop" : 1736558832958,
          "duration" : 317
        }
      }, {
        "uid" : "55ca0e65172d8368",
        "reportUrl" : "https://Areso.github.io/Oblache/274//#testresult/55ca0e65172d8368",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736472983241,
          "stop" : 1736472983545,
          "duration" : 304
        }
      }, {
        "uid" : "1e974f0f5ee4571f",
        "reportUrl" : "https://Areso.github.io/Oblache/273//#testresult/1e974f0f5ee4571f",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736385989554,
          "stop" : 1736385990069,
          "duration" : 515
        }
      }, {
        "uid" : "70defdb456885dd6",
        "reportUrl" : "https://Areso.github.io/Oblache/272//#testresult/70defdb456885dd6",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736299615174,
          "stop" : 1736299615533,
          "duration" : 359
        }
      }, {
        "uid" : "44339367b0fe9c63",
        "reportUrl" : "https://Areso.github.io/Oblache/271//#testresult/44339367b0fe9c63",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736213231484,
          "stop" : 1736213231860,
          "duration" : 376
        }
      }, {
        "uid" : "5b5681cb29ec22bb",
        "reportUrl" : "https://Areso.github.io/Oblache/270//#testresult/5b5681cb29ec22bb",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736127502298,
          "stop" : 1736127502802,
          "duration" : 504
        }
      }, {
        "uid" : "fe6c652747045a70",
        "reportUrl" : "https://Areso.github.io/Oblache/269//#testresult/fe6c652747045a70",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736041213227,
          "stop" : 1736041213739,
          "duration" : 512
        }
      }, {
        "uid" : "bbb7111edda93c1b",
        "reportUrl" : "https://Areso.github.io/Oblache/268//#testresult/bbb7111edda93c1b",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1735953925900,
          "stop" : 1735953926404,
          "duration" : 504
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "b2be48f83ecefae9.json",
  "parameterValues" : [ ]
}