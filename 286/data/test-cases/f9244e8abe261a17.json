{
  "uid" : "f9244e8abe261a17",
  "name" : "POST checking ports_len positive",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_checking_ports_len_positive",
  "historyId" : "c6f631852f230d7f46e21d1143ab0d56",
  "time" : {
    "start" : 1737509187330,
    "stop" : 1737509187835,
    "duration" : 505
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 400",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f15cc6ed760>\n\n    @allure.title('POST checking ports_len positive')\n    def test_post_checking_ports_len_positive(self):\n        result = API.post_create_docker_container_checking_ports(\n            token=TestPOST.token,\n            port_len=\"80-89\")\n>       Checking.check_status_code(result, 201)\n\ntests_api/test_bd.py:374: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 400",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f15cc6ed760>\n\n    @allure.title('POST checking ports_len positive')\n    def test_post_checking_ports_len_positive(self):\n        result = API.post_create_docker_container_checking_ports(\n            token=TestPOST.token,\n            port_len=\"80-89\")\n>       Checking.check_status_code(result, 201)\n\ntests_api/test_bd.py:374: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_create_docker_container",
      "time" : {
        "start" : 1737509187330,
        "stop" : 1737509187835,
        "duration" : 505
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_create",
        "time" : {
          "start" : 1737509187835,
          "stop" : 1737509187835,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1737509187835,
          "stop" : 1737509187835,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Url: https://dbend.areso.pro/container_create",
          "time" : {
            "start" : 1737509187835,
            "stop" : 1737509187835,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'dcf3b8a3-adcd-4001-bef7-982a58597c0e'}",
          "time" : {
            "start" : 1737509187835,
            "stop" : 1737509187835,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"docker_image\": \"nginx\", \"int_ports\": f\"80-89\", \"env\": 3, \"region\": 3}",
          "time" : {
            "start" : 1737509187835,
            "stop" : 1737509187835,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 3,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1737509187835,
          "stop" : 1737509187835,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 400",
          "time" : {
            "start" : 1737509187835,
            "stop" : 1737509187835,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n    \"msg_code\": -1,\n    \"msg\": \"endpoint is disabled\"\n}\n",
          "time" : {
            "start" : 1737509187835,
            "stop" : 1737509187835,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 8,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 201 == Response status code: 400",
      "time" : {
        "start" : 1737509187835,
        "stop" : 1737509187835,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 400\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 10,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1334-507"
  }, {
    "name" : "thread",
    "value" : "2460-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 91,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 70,
        "unknown" : 0,
        "total" : 164
      },
      "items" : [ {
        "uid" : "a1ecde835ba7ec7a",
        "reportUrl" : "https://Areso.github.io/Oblache/285//#testresult/a1ecde835ba7ec7a",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737422652758,
          "stop" : 1737422653076,
          "duration" : 318
        }
      }, {
        "uid" : "9ce3834241921ad7",
        "reportUrl" : "https://Areso.github.io/Oblache/284//#testresult/9ce3834241921ad7",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737336345387,
          "stop" : 1737336345748,
          "duration" : 361
        }
      }, {
        "uid" : "6852f55effaf79b9",
        "reportUrl" : "https://Areso.github.io/Oblache/283//#testresult/6852f55effaf79b9",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737250616769,
          "stop" : 1737250617127,
          "duration" : 358
        }
      }, {
        "uid" : "80624523120a7635",
        "reportUrl" : "https://Areso.github.io/Oblache/282//#testresult/80624523120a7635",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737163310482,
          "stop" : 1737163310799,
          "duration" : 317
        }
      }, {
        "uid" : "8fbad0ec6ba28db0",
        "reportUrl" : "https://Areso.github.io/Oblache/281//#testresult/8fbad0ec6ba28db0",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737077022019,
          "stop" : 1737077022338,
          "duration" : 319
        }
      }, {
        "uid" : "e95b007bf1d631a0",
        "reportUrl" : "https://Areso.github.io/Oblache/280//#testresult/e95b007bf1d631a0",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736990648533,
          "stop" : 1736990648859,
          "duration" : 326
        }
      }, {
        "uid" : "7dbf670e531c6c66",
        "reportUrl" : "https://Areso.github.io/Oblache/279//#testresult/7dbf670e531c6c66",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736904296155,
          "stop" : 1736904296526,
          "duration" : 371
        }
      }, {
        "uid" : "51b15d731c219b5e",
        "reportUrl" : "https://Areso.github.io/Oblache/278//#testresult/51b15d731c219b5e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736817786746,
          "stop" : 1736817787061,
          "duration" : 315
        }
      }, {
        "uid" : "75fff675bbda3d27",
        "reportUrl" : "https://Areso.github.io/Oblache/277//#testresult/75fff675bbda3d27",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736732320304,
          "stop" : 1736732320682,
          "duration" : 378
        }
      }, {
        "uid" : "178ab7ad644aa7dc",
        "reportUrl" : "https://Areso.github.io/Oblache/276//#testresult/178ab7ad644aa7dc",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736646094900,
          "stop" : 1736646095229,
          "duration" : 329
        }
      }, {
        "uid" : "9eb7a66234a8dfdb",
        "reportUrl" : "https://Areso.github.io/Oblache/275//#testresult/9eb7a66234a8dfdb",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736558831317,
          "stop" : 1736558831639,
          "duration" : 322
        }
      }, {
        "uid" : "8bdbd53836378cff",
        "reportUrl" : "https://Areso.github.io/Oblache/274//#testresult/8bdbd53836378cff",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736472981962,
          "stop" : 1736472982267,
          "duration" : 305
        }
      }, {
        "uid" : "cee36c497408d4db",
        "reportUrl" : "https://Areso.github.io/Oblache/273//#testresult/cee36c497408d4db",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736385987487,
          "stop" : 1736385987992,
          "duration" : 505
        }
      }, {
        "uid" : "e99e300388c7731a",
        "reportUrl" : "https://Areso.github.io/Oblache/272//#testresult/e99e300388c7731a",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736299613687,
          "stop" : 1736299614047,
          "duration" : 360
        }
      }, {
        "uid" : "a98fab24cc9fcfe0",
        "reportUrl" : "https://Areso.github.io/Oblache/271//#testresult/a98fab24cc9fcfe0",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736213229964,
          "stop" : 1736213230334,
          "duration" : 370
        }
      }, {
        "uid" : "148cb52d79bdd096",
        "reportUrl" : "https://Areso.github.io/Oblache/270//#testresult/148cb52d79bdd096",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736127500197,
          "stop" : 1736127500705,
          "duration" : 508
        }
      }, {
        "uid" : "ca0898dcbf3bb8ea",
        "reportUrl" : "https://Areso.github.io/Oblache/269//#testresult/ca0898dcbf3bb8ea",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736041211152,
          "stop" : 1736041211660,
          "duration" : 508
        }
      }, {
        "uid" : "f6f4998706b4496d",
        "reportUrl" : "https://Areso.github.io/Oblache/268//#testresult/f6f4998706b4496d",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1735953923842,
          "stop" : 1735953924334,
          "duration" : 492
        }
      }, {
        "uid" : "865a8c5e7b040ea",
        "reportUrl" : "https://Areso.github.io/Oblache/267//#testresult/865a8c5e7b040ea",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1735867604700,
          "stop" : 1735867605019,
          "duration" : 319
        }
      }, {
        "uid" : "4f93140c2f167931",
        "reportUrl" : "https://Areso.github.io/Oblache/266//#testresult/4f93140c2f167931",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1735781159854,
          "stop" : 1735781160383,
          "duration" : 529
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "f9244e8abe261a17.json",
  "parameterValues" : [ ]
}