{
  "uid" : "d99838c17042ff71",
  "name" : "delete db",
  "fullName" : "tests.test_bd.TestPOST#test_delete_db",
  "historyId" : "6b562f8bf571af52594cf0d13d8f83e3",
  "time" : {
    "start" : 1706729030501,
    "stop" : 1706729031238,
    "duration" : 737
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL\n\nAssertionError: Incorrect status code",
  "statusTrace" : "self = <tests.test_bd.TestPOST object at 0x7f39667104f0>\n\n    @allure.sub_suite('DELETE')\n    @allure.title('delete db')\n    @pytest.mark.xfail()\n    def test_delete_db(self):\n        print('\\n\\nMethod DELETE: delete_db')\n        list_db = API.post_db_list(TestData.sid)\n        json_list_db = json.loads(list_db.text)\n        try:\n            first_db_uuid = list(json_list_db['content'].keys())[0]\n            result_post_db_delete = API.delete_db(first_db_uuid, TestData.sid)\n>           Checking.check_status_code(result_post_db_delete, 200)\n\ntests/test_bd.py:168: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response JSON\n        :param status_code:\n        :return: int\n        \"\"\"\n>       assert status_code == result.status_code, 'Incorrect status code'\nE       AssertionError: Incorrect status code\n\nutils/checking.py:17: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL\n\nAssertionError: Incorrect status code",
    "statusTrace" : "self = <tests.test_bd.TestPOST object at 0x7f39667104f0>\n\n    @allure.sub_suite('DELETE')\n    @allure.title('delete db')\n    @pytest.mark.xfail()\n    def test_delete_db(self):\n        print('\\n\\nMethod DELETE: delete_db')\n        list_db = API.post_db_list(TestData.sid)\n        json_list_db = json.loads(list_db.text)\n        try:\n            first_db_uuid = list(json_list_db['content'].keys())[0]\n            result_post_db_delete = API.delete_db(first_db_uuid, TestData.sid)\n>           Checking.check_status_code(result_post_db_delete, 200)\n\ntests/test_bd.py:168: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response JSON\n        :param status_code:\n        :return: int\n        \"\"\"\n>       assert status_code == result.status_code, 'Incorrect status code'\nE       AssertionError: Incorrect status code\n\nutils/checking.py:17: AssertionError",
    "steps" : [ {
      "name" : "Method POST",
      "time" : {
        "start" : 1706729030502,
        "stop" : 1706729030875,
        "duration" : 373
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Add request",
        "time" : {
          "start" : 1706729030502,
          "stop" : 1706729030502,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "url",
          "value" : "'https://dbend.areso.pro/db_list'"
        }, {
          "name" : "method",
          "value" : "'POST'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : true
      }, {
        "name" : "Add response",
        "time" : {
          "start" : 1706729030875,
          "stop" : 1706729030875,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Response code: 200\n",
          "time" : {
            "start" : 1706729030875,
            "stop" : 1706729030875,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        }, {
          "name" : "Response text: {\n    \"content\": {\n        \"065ba9e4-4004-7940-8000-6fcfa133fae9\": [\n            \"\",\n            \"CIS\",\n            \"db_creating\",\n            null,\n            \"None\"\n        ]\n    }\n}\n\n",
          "time" : {
            "start" : 1706729030875,
            "stop" : 1706729030875,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "result",
          "value" : "<Response [200]>"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 2,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "url",
        "value" : "'https://dbend.areso.pro/db_list'"
      }, {
        "name" : "body",
        "value" : "{}"
      }, {
        "name" : "cookie",
        "value" : "{'sid': '429a6e9d-7d83-4178-9e56-cd1e4eaa46d0'}"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 4,
      "hasContent" : true
    }, {
      "name" : "Method POST",
      "time" : {
        "start" : 1706729030875,
        "stop" : 1706729031237,
        "duration" : 362
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Add request",
        "time" : {
          "start" : 1706729030876,
          "stop" : 1706729030876,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "url",
          "value" : "'https://dbend.areso.pro/db_delete'"
        }, {
          "name" : "method",
          "value" : "'POST'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : true
      }, {
        "name" : "Add response",
        "time" : {
          "start" : 1706729031237,
          "stop" : 1706729031237,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Response code: 400\n",
          "time" : {
            "start" : 1706729031237,
            "stop" : 1706729031237,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        }, {
          "name" : "Response text: {\n    \"content\": \"msg[18]: error: can't delete a db while it's creating\"\n}\n\n",
          "time" : {
            "start" : 1706729031237,
            "stop" : 1706729031237,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "result",
          "value" : "<Response [400]>"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 2,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "url",
        "value" : "'https://dbend.areso.pro/db_delete'"
      }, {
        "name" : "db_uuid",
        "value" : "'{\"db_uuid\": \"065ba9e4-4004-7940-8000-6fcfa133fae9\"}'"
      }, {
        "name" : "sid",
        "value" : "{'sid': '429a6e9d-7d83-4178-9e56-cd1e4eaa46d0'}"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 4,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "4d480d72a1dd8d1b",
      "name" : "stdout",
      "source" : "4d480d72a1dd8d1b.txt",
      "type" : "text/plain",
      "size" : 411
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 10,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "subSuite",
    "value" : "DELETE"
  }, {
    "name" : "suite",
    "value" : "REQUESTS POST"
  }, {
    "name" : "epic",
    "value" : "POST REQUESTS"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "host",
    "value" : "fv-az1215-15"
  }, {
    "name" : "thread",
    "value" : "1799-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 2,
        "passed" : 4,
        "unknown" : 0,
        "total" : 6
      },
      "items" : [ {
        "uid" : "519f2753fbcf1346",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nAssertionError: Incorrect status code",
        "time" : {
          "start" : 1706630869753,
          "stop" : 1706630870399,
          "duration" : 646
        }
      }, {
        "uid" : "b71c5bfb4d1f4711",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1706630300187,
          "stop" : 1706630300570,
          "duration" : 383
        }
      }, {
        "uid" : "bb8d4c6a3d5aa5bd",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1706630061520,
          "stop" : 1706630061909,
          "duration" : 389
        }
      }, {
        "uid" : "2e6ca177dd6f0519",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1706484251724,
          "stop" : 1706484252111,
          "duration" : 387
        }
      }, {
        "uid" : "85f033d2a3c9411f",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1706282538329,
          "stop" : 1706282538678,
          "duration" : 349
        }
      } ]
    },
    "tags" : [ "@pytest.mark.xfail" ]
  },
  "source" : "d99838c17042ff71.json",
  "parameterValues" : [ ]
}