{
  "uid" : "9097f87ddc1cc4f2",
  "name" : "Post registration email is taken",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_registration_email_is_taken",
  "historyId" : "8e5e97e65cd661fe5135ad0b97aa29eb",
  "time" : {
    "start" : 1709754046045,
    "stop" : 1709754046406,
    "duration" : 361
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: msg[33]: language is not provided is not presence",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fb88c1fd4e0>\n\n    @allure.title('Post registration email is taken')\n    def test_post_registration_email_is_taken(self):\n        result_post = API.post_registration()\n        print(result_post.text)\n        status_code = result_post\n        Checking.check_status_code(status_code, 400)\n>       Checking.check_json_search_word_in_value(result_post, 'content',\n                                                 'msg[3]: registration failed, this email is taken')\n\ntests_api/test_bd.py:156: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, key = 'content'\nsearch_word = 'msg[3]: registration failed, this email is taken'\n\n    @staticmethod\n    def check_json_search_word_in_value(response, key, search_word):\n        \"\"\"\n        Checks if the required string is in the response JSON by key\n        :param response: JSON\n        :param key: str()\n        :param search_word: str()\n        :return: answer\n        \"\"\"\n        check = response.json()\n        check_info = check.get(key)\n        with allure.step(\n                f'Check and compare result request with expected value by key:'\n                f'\\nResponse: {response}\\nKey: {key}\\nValue: {search_word}'):\n>           assert search_word in check_info, f'{check_info} is not presence'\nE           AssertionError: msg[33]: language is not provided is not presence\n\ntests_api/utils/checking.py:80: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: msg[33]: language is not provided is not presence",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fb88c1fd4e0>\n\n    @allure.title('Post registration email is taken')\n    def test_post_registration_email_is_taken(self):\n        result_post = API.post_registration()\n        print(result_post.text)\n        status_code = result_post\n        Checking.check_status_code(status_code, 400)\n>       Checking.check_json_search_word_in_value(result_post, 'content',\n                                                 'msg[3]: registration failed, this email is taken')\n\ntests_api/test_bd.py:156: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, key = 'content'\nsearch_word = 'msg[3]: registration failed, this email is taken'\n\n    @staticmethod\n    def check_json_search_word_in_value(response, key, search_word):\n        \"\"\"\n        Checks if the required string is in the response JSON by key\n        :param response: JSON\n        :param key: str()\n        :param search_word: str()\n        :return: answer\n        \"\"\"\n        check = response.json()\n        check_info = check.get(key)\n        with allure.step(\n                f'Check and compare result request with expected value by key:'\n                f'\\nResponse: {response}\\nKey: {key}\\nValue: {search_word}'):\n>           assert search_word in check_info, f'{check_info} is not presence'\nE           AssertionError: msg[33]: language is not provided is not presence\n\ntests_api/utils/checking.py:80: AssertionError",
    "steps" : [ {
      "name" : "post_registration",
      "time" : {
        "start" : 1709754046045,
        "stop" : 1709754046406,
        "duration" : 361
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "POST https://dbend.areso.pro/register",
        "time" : {
          "start" : 1709754046045,
          "stop" : 1709754046406,
          "duration" : 361
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 400",
          "time" : {
            "start" : 1709754046406,
            "stop" : 1709754046406,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        }, {
          "name" : "Params url: https://dbend.areso.pro/register",
          "time" : {
            "start" : 1709754046406,
            "stop" : 1709754046406,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 2,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 3,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 400 == Response status code: 400",
      "time" : {
        "start" : 1709754046406,
        "stop" : 1709754046406,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Check and compare result request with expected value by key:\nResponse: <Response [400]>\nKey: content\nValue: msg[3]: registration failed, this email is taken",
      "time" : {
        "start" : 1709754046406,
        "stop" : 1709754046406,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: msg[33]: language is not provided is not presence\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 80, in check_json_search_word_in_value\n    assert search_word in check_info, f'{check_info} is not presence'\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 6,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "epic",
    "value" : "POST REQUESTS"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az564-124"
  }, {
    "name" : "thread",
    "value" : "1775-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 11,
        "unknown" : 0,
        "total" : 12
      },
      "items" : [ {
        "uid" : "e5c3fa733534a63b",
        "status" : "passed",
        "time" : {
          "start" : 1709070972684,
          "stop" : 1709070973215,
          "duration" : 531
        }
      }, {
        "uid" : "45c95c64caad0bfc",
        "status" : "passed",
        "time" : {
          "start" : 1709068080691,
          "stop" : 1709068081007,
          "duration" : 316
        }
      }, {
        "uid" : "b09bbc191192c0ab",
        "status" : "passed",
        "time" : {
          "start" : 1709064647952,
          "stop" : 1709064648264,
          "duration" : 312
        }
      }, {
        "uid" : "8b4dc0e5cc43e23f",
        "status" : "passed",
        "time" : {
          "start" : 1709054411639,
          "stop" : 1709054411958,
          "duration" : 319
        }
      }, {
        "uid" : "2a6ed8ffa022c88f",
        "status" : "passed",
        "time" : {
          "start" : 1708977155547,
          "stop" : 1708977155857,
          "duration" : 310
        }
      }, {
        "uid" : "61d7593a2c95b076",
        "status" : "passed",
        "time" : {
          "start" : 1708882313993,
          "stop" : 1708882314307,
          "duration" : 314
        }
      }, {
        "uid" : "484d190192a6d7c1",
        "status" : "passed",
        "time" : {
          "start" : 1708876668119,
          "stop" : 1708876668426,
          "duration" : 307
        }
      }, {
        "uid" : "8e220b802e59f518",
        "status" : "passed",
        "time" : {
          "start" : 1708032433177,
          "stop" : 1708032433670,
          "duration" : 493
        }
      }, {
        "uid" : "c14183e39ee9689c",
        "status" : "passed",
        "time" : {
          "start" : 1708031927732,
          "stop" : 1708031928223,
          "duration" : 491
        }
      }, {
        "uid" : "b8ab77e462b3e479",
        "status" : "passed",
        "time" : {
          "start" : 1708028404229,
          "stop" : 1708028404595,
          "duration" : 366
        }
      }, {
        "uid" : "938875ff0cc9f813",
        "status" : "passed",
        "time" : {
          "start" : 1707696104602,
          "stop" : 1707696105107,
          "duration" : 505
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "9097f87ddc1cc4f2.json",
  "parameterValues" : [ ]
}