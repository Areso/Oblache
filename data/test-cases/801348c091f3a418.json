{
  "uid" : "801348c091f3a418",
  "name" : "Post db list",
  "fullName" : "tests.test_first.TestPOST#test_post_db_list",
  "historyId" : "6364d06d5cf83d3bb6572507477edc14",
  "time" : {
    "start" : 1705692147369,
    "stop" : 1705692147904,
    "duration" : 535
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code",
  "statusTrace" : "self = <tests.test_first.TestPOST object at 0x7fe8bf63edd0>\n\n    @allure.sub_suite('POST')\n    @allure.title('Post db list')\n    def test_post_db_list(self):\n        print('\\n\\nMethod POST: db_list')\n        result_post_db_list = API.post_db_list(TestData.sid)\n>       Checking.check_status_code(result_post_db_list, 200)\n\ntests/test_first.py:73: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [401]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response JSON\n        :param status_code:\n        :return: int\n        \"\"\"\n>       assert status_code == result.status_code, 'Incorrect status code'\nE       AssertionError: Incorrect status code\n\nutils/checking.py:17: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code",
    "statusTrace" : "self = <tests.test_first.TestPOST object at 0x7fe8bf63edd0>\n\n    @allure.sub_suite('POST')\n    @allure.title('Post db list')\n    def test_post_db_list(self):\n        print('\\n\\nMethod POST: db_list')\n        result_post_db_list = API.post_db_list(TestData.sid)\n>       Checking.check_status_code(result_post_db_list, 200)\n\ntests/test_first.py:73: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [401]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response JSON\n        :param status_code:\n        :return: int\n        \"\"\"\n>       assert status_code == result.status_code, 'Incorrect status code'\nE       AssertionError: Incorrect status code\n\nutils/checking.py:17: AssertionError",
    "steps" : [ {
      "name" : "Method POST",
      "time" : {
        "start" : 1705692147369,
        "stop" : 1705692147904,
        "duration" : 535
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Add request",
        "time" : {
          "start" : 1705692147369,
          "stop" : 1705692147369,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "url",
          "value" : "'https://dbend.areso.pro/db_list'"
        }, {
          "name" : "method",
          "value" : "'POST'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : true
      }, {
        "name" : "Add response",
        "time" : {
          "start" : 1705692147904,
          "stop" : 1705692147904,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Response code: 401\n",
          "time" : {
            "start" : 1705692147904,
            "stop" : 1705692147904,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        }, {
          "name" : "Response text: {\n    \"content\": \"unauthenticated\"\n}\n\n",
          "time" : {
            "start" : 1705692147904,
            "stop" : 1705692147904,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "result",
          "value" : "<Response [401]>"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 2,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "url",
        "value" : "'https://dbend.areso.pro/db_list'"
      }, {
        "name" : "body",
        "value" : "{}"
      }, {
        "name" : "cookie",
        "value" : "{}"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 4,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "9581f4e508e8adfd",
      "name" : "stdout",
      "source" : "9581f4e508e8adfd.txt",
      "type" : "text/plain",
      "size" : 104
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 5,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "POST REQUESTS"
  }, {
    "name" : "subSuite",
    "value" : "POST"
  }, {
    "name" : "suite",
    "value" : "REQUESTS POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "host",
    "value" : "fv-az1055-108"
  }, {
    "name" : "thread",
    "value" : "1787-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_first"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "801348c091f3a418.json",
  "parameterValues" : [ ]
}