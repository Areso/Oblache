{
  "uid" : "bb5f5a4c489bc24f",
  "name" : "Post login",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_login",
  "historyId" : "c63a2718dd359ea9a57ebf3b258dd33a",
  "time" : {
    "start" : 1710085912681,
    "stop" : 1710085912986,
    "duration" : 305
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f907e0a1000>\n\n    @allure.title('Post login')\n    def test_post_login(self):\n        result_post = API.post_login(TestData.body)\n>       Checking.check_status_code(result_post, 200)\n\ntests_api/test_bd.py:192: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response JSON\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, 'Incorrect status code'\nE           AssertionError: Incorrect status code\n\ntests_api/utils/checking.py:18: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f907e0a1000>\n\n    @allure.title('Post login')\n    def test_post_login(self):\n        result_post = API.post_login(TestData.body)\n>       Checking.check_status_code(result_post, 200)\n\ntests_api/test_bd.py:192: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response JSON\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, 'Incorrect status code'\nE           AssertionError: Incorrect status code\n\ntests_api/utils/checking.py:18: AssertionError",
    "steps" : [ {
      "name" : "post_login",
      "time" : {
        "start" : 1710085912681,
        "stop" : 1710085912985,
        "duration" : 304
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "POST https://dbend.areso.pro/login",
        "time" : {
          "start" : 1710085912681,
          "stop" : 1710085912985,
          "duration" : 304
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 502",
          "time" : {
            "start" : 1710085912985,
            "stop" : 1710085912985,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        }, {
          "name" : "Params url: https://dbend.areso.pro/login",
          "time" : {
            "start" : 1710085912985,
            "stop" : 1710085912985,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 2,
        "hasContent" : true
      }, {
        "name" : "Body: {\"email\":\"your_email\",\"password\":\"your_password\"}",
        "time" : {
          "start" : 1710085912985,
          "stop" : 1710085912985,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 4,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 502",
      "time" : {
        "start" : 1710085912985,
        "stop" : 1710085912985,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 18, in check_status_code\n    assert status_code == result.status_code, 'Incorrect status code'\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 6,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "epic",
    "value" : "POST REQUESTS"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1538-814"
  }, {
    "name" : "thread",
    "value" : "1948-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 12,
        "unknown" : 0,
        "total" : 13
      },
      "items" : [ {
        "uid" : "7591735288806669",
        "status" : "passed",
        "time" : {
          "start" : 1709754046415,
          "stop" : 1709754046782,
          "duration" : 367
        }
      }, {
        "uid" : "16fad2869d546b83",
        "status" : "passed",
        "time" : {
          "start" : 1709070973216,
          "stop" : 1709070973748,
          "duration" : 532
        }
      }, {
        "uid" : "53666a1515b00a8b",
        "status" : "passed",
        "time" : {
          "start" : 1709068081009,
          "stop" : 1709068081341,
          "duration" : 332
        }
      }, {
        "uid" : "93b1d8a6148b7a0d",
        "status" : "passed",
        "time" : {
          "start" : 1709064648266,
          "stop" : 1709064648579,
          "duration" : 313
        }
      }, {
        "uid" : "a475a21b9bab4198",
        "status" : "passed",
        "time" : {
          "start" : 1709054411959,
          "stop" : 1709054412276,
          "duration" : 317
        }
      }, {
        "uid" : "605199689ebf6c26",
        "status" : "passed",
        "time" : {
          "start" : 1708977155859,
          "stop" : 1708977156166,
          "duration" : 307
        }
      }, {
        "uid" : "1294ee2ed29b6205",
        "status" : "passed",
        "time" : {
          "start" : 1708882314309,
          "stop" : 1708882314632,
          "duration" : 323
        }
      }, {
        "uid" : "c8195fe11e1ebeef",
        "status" : "passed",
        "time" : {
          "start" : 1708876668427,
          "stop" : 1708876668740,
          "duration" : 313
        }
      }, {
        "uid" : "27792a502d4adb30",
        "status" : "passed",
        "time" : {
          "start" : 1708032433672,
          "stop" : 1708032434171,
          "duration" : 499
        }
      }, {
        "uid" : "b4a58ab1ec888b8b",
        "status" : "passed",
        "time" : {
          "start" : 1708031928224,
          "stop" : 1708031928727,
          "duration" : 503
        }
      }, {
        "uid" : "77fc3c20082c72f2",
        "status" : "passed",
        "time" : {
          "start" : 1708028404597,
          "stop" : 1708028404970,
          "duration" : 373
        }
      }, {
        "uid" : "ee6a6eb19df4922",
        "status" : "passed",
        "time" : {
          "start" : 1707696105109,
          "stop" : 1707696105605,
          "duration" : 496
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "bb5f5a4c489bc24f.json",
  "parameterValues" : [ ]
}