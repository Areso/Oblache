{
  "uid" : "cfaf50e49f968f69",
  "name" : "delete_db",
  "fullName" : "tests.test_bd.TestPOST#test_delete_db",
  "historyId" : "6b562f8bf571af52594cf0d13d8f83e3",
  "time" : {
    "start" : 1707684215245,
    "stop" : 1707684216071,
    "duration" : 826
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL\n\nAssertionError: Incorrect status code",
  "statusTrace" : "self = <tests.test_bd.TestPOST object at 0x7fc321b10f70>\n\n    @allure.title('delete_db')\n    @pytest.mark.xfail()\n    def test_delete_db(self):\n        print('\\n\\nMethod DELETE: delete_db')\n        list_db = API.post_db_list(TestData.sid)\n        json_list_db = list_db.json()\n        print('#'*20,len(list(json_list_db['content'])))\n        try:\n            first_db_uuid = list(json_list_db['content'].keys())[-1]\n            print(first_db_uuid)\n            result_post_db_delete = API.delete_db(first_db_uuid, TestData.sid)\n>           Checking.check_status_code(result_post_db_delete, 200)\n\ntests/test_bd.py:250: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response JSON\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, 'Incorrect status code'\nE           AssertionError: Incorrect status code\n\nutils/checking.py:18: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL\n\nAssertionError: Incorrect status code",
    "statusTrace" : "self = <tests.test_bd.TestPOST object at 0x7fc321b10f70>\n\n    @allure.title('delete_db')\n    @pytest.mark.xfail()\n    def test_delete_db(self):\n        print('\\n\\nMethod DELETE: delete_db')\n        list_db = API.post_db_list(TestData.sid)\n        json_list_db = list_db.json()\n        print('#'*20,len(list(json_list_db['content'])))\n        try:\n            first_db_uuid = list(json_list_db['content'].keys())[-1]\n            print(first_db_uuid)\n            result_post_db_delete = API.delete_db(first_db_uuid, TestData.sid)\n>           Checking.check_status_code(result_post_db_delete, 200)\n\ntests/test_bd.py:250: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response JSON\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, 'Incorrect status code'\nE           AssertionError: Incorrect status code\n\nutils/checking.py:18: AssertionError",
    "steps" : [ {
      "name" : "post_db_list",
      "time" : {
        "start" : 1707684215245,
        "stop" : 1707684215699,
        "duration" : 454
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "POST https://dbend.areso.pro/db_list",
        "time" : {
          "start" : 1707684215245,
          "stop" : 1707684215245,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : false
      }, {
        "name" : "Status code: 200",
        "time" : {
          "start" : 1707684215699,
          "stop" : 1707684215699,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : false
      }, {
        "name" : "Params url: https://dbend.areso.pro/db_list",
        "time" : {
          "start" : 1707684215699,
          "stop" : 1707684215699,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : false
      }, {
        "name" : "Response: <Response [200]>",
        "time" : {
          "start" : 1707684215699,
          "stop" : 1707684215699,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "sid",
        "value" : "{'sid': '272d5182-4fe2-4e27-bc07-268c2d51155c'}"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 4,
      "hasContent" : true
    }, {
      "name" : "delete_db",
      "time" : {
        "start" : 1707684215699,
        "stop" : 1707684216071,
        "duration" : 372
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "DELETE https://dbend.areso.pro/db_delete",
        "time" : {
          "start" : 1707684215699,
          "stop" : 1707684215699,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : false
      }, {
        "name" : "Db uuid is: {'db_uuid': '065c9317-3ee6-71f7-8000-b6be53b22abc'}",
        "time" : {
          "start" : 1707684215699,
          "stop" : 1707684215699,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : false
      }, {
        "name" : "Status code: 400",
        "time" : {
          "start" : 1707684216071,
          "stop" : 1707684216071,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : false
      }, {
        "name" : "Params url: https://dbend.areso.pro/db_delete",
        "time" : {
          "start" : 1707684216071,
          "stop" : 1707684216071,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : false
      }, {
        "name" : "Response: <Response [400]>",
        "time" : {
          "start" : 1707684216071,
          "stop" : 1707684216071,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "uuid",
        "value" : "'065c9317-3ee6-71f7-8000-b6be53b22abc'"
      }, {
        "name" : "sid",
        "value" : "{'sid': '272d5182-4fe2-4e27-bc07-268c2d51155c'}"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 5,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 400",
      "time" : {
        "start" : 1707684216071,
        "stop" : 1707684216071,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/utils/checking.py\", line 18, in check_status_code\n    assert status_code == result.status_code, 'Incorrect status code'\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 12,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "POST REQUESTS"
  }, {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az692-190"
  }, {
    "name" : "thread",
    "value" : "1774-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 18,
        "passed" : 20,
        "unknown" : 0,
        "total" : 38
      },
      "items" : [ {
        "uid" : "5fe3d08b43955e24",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nAssertionError: Incorrect status code",
        "time" : {
          "start" : 1707683180713,
          "stop" : 1707683181895,
          "duration" : 1182
        }
      }, {
        "uid" : "20ad18abb1542dc2",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nAssertionError: Incorrect status code",
        "time" : {
          "start" : 1707681007318,
          "stop" : 1707681007970,
          "duration" : 652
        }
      }, {
        "uid" : "83dc1ec9f718d437",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nAssertionError: Incorrect status code",
        "time" : {
          "start" : 1707679325430,
          "stop" : 1707679326073,
          "duration" : 643
        }
      }, {
        "uid" : "fa047bb7659ac9d5",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nAssertionError: Incorrect status code",
        "time" : {
          "start" : 1707673544362,
          "stop" : 1707673544989,
          "duration" : 627
        }
      }, {
        "uid" : "403300e28c382f8f",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nAssertionError: Incorrect status code",
        "time" : {
          "start" : 1707608825270,
          "stop" : 1707608826274,
          "duration" : 1004
        }
      }, {
        "uid" : "70aeb2ccb73b3239",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nAssertionError: Incorrect status code",
        "time" : {
          "start" : 1707437718353,
          "stop" : 1707437719408,
          "duration" : 1055
        }
      }, {
        "uid" : "3fe61e51bcbe543d",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nAssertionError: Incorrect status code",
        "time" : {
          "start" : 1707436447604,
          "stop" : 1707436448624,
          "duration" : 1020
        }
      }, {
        "uid" : "7638b1d8d30b0cce",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nAssertionError: Incorrect status code",
        "time" : {
          "start" : 1707430244520,
          "stop" : 1707430245268,
          "duration" : 748
        }
      }, {
        "uid" : "7f284c011f7b44c3",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nAssertionError: Incorrect status code",
        "time" : {
          "start" : 1707392879716,
          "stop" : 1707392880375,
          "duration" : 659
        }
      }, {
        "uid" : "96eb492b0d90cdf6",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nAssertionError: Incorrect status code",
        "time" : {
          "start" : 1707392541888,
          "stop" : 1707392542532,
          "duration" : 644
        }
      }, {
        "uid" : "8636075bfff914b6",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nAssertionError: Incorrect status code",
        "time" : {
          "start" : 1707348734209,
          "stop" : 1707348734971,
          "duration" : 762
        }
      }, {
        "uid" : "d4944ea3d01d56f6",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nAssertionError: Incorrect status code",
        "time" : {
          "start" : 1707348482248,
          "stop" : 1707348482900,
          "duration" : 652
        }
      }, {
        "uid" : "2b572f990b15709e",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nAssertionError: Incorrect status code",
        "time" : {
          "start" : 1707346509487,
          "stop" : 1707346510233,
          "duration" : 746
        }
      }, {
        "uid" : "a2d268966ab0b2c1",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1707337141588,
          "stop" : 1707337142740,
          "duration" : 1152
        }
      }, {
        "uid" : "8969120a3564215d",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1707265571619,
          "stop" : 1707265572713,
          "duration" : 1094
        }
      }, {
        "uid" : "80876f272141ef74",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nAssertionError: Incorrect status code",
        "time" : {
          "start" : 1707265337097,
          "stop" : 1707265337930,
          "duration" : 833
        }
      }, {
        "uid" : "a75d447b4e4357ce",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1707165515871,
          "stop" : 1707165516640,
          "duration" : 769
        }
      }, {
        "uid" : "2041c5b6517eb878",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1707164105851,
          "stop" : 1707164106931,
          "duration" : 1080
        }
      }, {
        "uid" : "eb3ce78c91ab0f0b",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1707158605870,
          "stop" : 1707158606946,
          "duration" : 1076
        }
      }, {
        "uid" : "192c254b1cb1aefd",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1707158021227,
          "stop" : 1707158022014,
          "duration" : 787
        }
      } ]
    },
    "tags" : [ "@pytest.mark.xfail" ]
  },
  "source" : "cfaf50e49f968f69.json",
  "parameterValues" : [ ]
}