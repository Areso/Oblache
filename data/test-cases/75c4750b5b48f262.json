{
  "uid" : "75c4750b5b48f262",
  "name" : "delete db",
  "fullName" : "tests.test_bd.TestPOST#test_delete_db",
  "historyId" : "6b562f8bf571af52594cf0d13d8f83e3",
  "time" : {
    "start" : 1707068504390,
    "stop" : 1707068505038,
    "duration" : 648
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL\n\nAssertionError: Incorrect status code",
  "statusTrace" : "self = <tests.test_bd.TestPOST object at 0x7fad888602e0>\n\n    @allure.title('delete db')\n    @pytest.mark.xfail()\n    def test_delete_db(self):\n        print('\\n\\nMethod DELETE: delete_db')\n        list_db = API.post_db_list(TestData.sid)\n        json_list_db = json.loads(list_db.text)\n        try:\n            first_db_uuid = list(json_list_db['content'].keys())[0]\n            result_post_db_delete = API.delete_db(first_db_uuid, TestData.sid)\n>           Checking.check_status_code(result_post_db_delete, 200)\n\ntests/test_bd.py:168: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response JSON\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, 'Incorrect status code'\nE           AssertionError: Incorrect status code\n\nutils/checking.py:18: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL\n\nAssertionError: Incorrect status code",
    "statusTrace" : "self = <tests.test_bd.TestPOST object at 0x7fad888602e0>\n\n    @allure.title('delete db')\n    @pytest.mark.xfail()\n    def test_delete_db(self):\n        print('\\n\\nMethod DELETE: delete_db')\n        list_db = API.post_db_list(TestData.sid)\n        json_list_db = json.loads(list_db.text)\n        try:\n            first_db_uuid = list(json_list_db['content'].keys())[0]\n            result_post_db_delete = API.delete_db(first_db_uuid, TestData.sid)\n>           Checking.check_status_code(result_post_db_delete, 200)\n\ntests/test_bd.py:168: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response JSON\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, 'Incorrect status code'\nE           AssertionError: Incorrect status code\n\nutils/checking.py:18: AssertionError",
    "steps" : [ {
      "name" : "POST https://dbend.areso.pro/db_list",
      "time" : {
        "start" : 1707068504390,
        "stop" : 1707068504390,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Status code: 200",
      "time" : {
        "start" : 1707068504723,
        "stop" : 1707068504723,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Params url: https://dbend.areso.pro/db_list\nCookies: {'sid': '4ba835a3-3577-4ae1-ba20-ea612e9293a9'}\nBody: {}",
      "time" : {
        "start" : 1707068504723,
        "stop" : 1707068504723,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Response: {\n    \"content\": {\n        \"065bbdf2-900e-7de3-8000-fe5647090c29\": [\n            \"db_zm4roh23\",\n            \"CIS\",\n            \"deleting\",\n            \"mysql://user_kapimpj6:pwPW01__bAt5CHK4Y7nJEq@cisdb1.areso.pro:3306/db_zm4roh23\",\n            \"2024-02-01 18:13:11\"\n        ],\n        \"065bbe1d-b666-7e1c-8000-d630957d6c04\": [\n            \"db_e1dhfoso\",\n            \"CIS\",\n            \"db_created\",\n            \"mysql://user_ryw2ytlx:pwPW01__IX1srYSIDeS9eI@cisdb1.areso.pro:3306/db_e1dhfoso\",\n            \"2024-02-01 18:24:42\"\n        ],\n        \"065bfc81-5a33-721d-8000-1c78f4dd87dc\": [\n            \"\",\n            \"CIS\",\n            \"db_creating\",\n            null,\n            \"None\"\n        ],\n        \"065bfc83-974a-7804-8000-125147de4a6f\": [\n            \"\",\n            \"CIS\",\n            \"db_creating\",\n            null,\n            \"None\"\n        ],\n        \"065bfcc5-5fc5-7dd3-8000-f04ca7281a63\": [\n            \"\",\n            \"CIS\",\n            \"db_creating\",\n            null,\n            \"None\"\n        ]\n    }\n}\n",
      "time" : {
        "start" : 1707068504723,
        "stop" : 1707068504723,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "DELETE https://dbend.areso.pro/db_delete",
      "time" : {
        "start" : 1707068504724,
        "stop" : 1707068504724,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Db uuid is: {'db_uuid': '065bbdf2-900e-7de3-8000-fe5647090c29'}",
      "time" : {
        "start" : 1707068504724,
        "stop" : 1707068504724,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Status code: 400",
      "time" : {
        "start" : 1707068505037,
        "stop" : 1707068505037,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Params url: https://dbend.areso.pro/db_delete\nDb uuid: {\"db_uuid\": \"065bbdf2-900e-7de3-8000-fe5647090c29\"}\nSid: {'sid': '4ba835a3-3577-4ae1-ba20-ea612e9293a9'}",
      "time" : {
        "start" : 1707068505037,
        "stop" : 1707068505038,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Response: {\n    \"content\": \"msg[19]: error: can't delete a db while it's deleting\"\n}\n",
      "time" : {
        "start" : 1707068505038,
        "stop" : 1707068505038,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Assert status code: 200 == Response status code: 400",
      "time" : {
        "start" : 1707068505038,
        "stop" : 1707068505038,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/utils/checking.py\", line 18, in check_status_code\n    assert status_code == result.status_code, 'Incorrect status code'\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "132a8195ec153187",
      "name" : "stdout",
      "source" : "132a8195ec153187.txt",
      "type" : "text/plain",
      "size" : 1245
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 10,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "epic",
    "value" : "POST REQUESTS"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1113-935"
  }, {
    "name" : "thread",
    "value" : "1762-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 3,
        "passed" : 7,
        "unknown" : 0,
        "total" : 10
      },
      "items" : [ {
        "uid" : "f21bb0bce494d130",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1707067417412,
          "stop" : 1707067418467,
          "duration" : 1055
        }
      }, {
        "uid" : "47d098ca190981f",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1706811870015,
          "stop" : 1706811870707,
          "duration" : 692
        }
      }, {
        "uid" : "f392bbff791bcfb8",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1706810644211,
          "stop" : 1706810645005,
          "duration" : 794
        }
      }, {
        "uid" : "d99838c17042ff71",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nAssertionError: Incorrect status code",
        "time" : {
          "start" : 1706729030501,
          "stop" : 1706729031238,
          "duration" : 737
        }
      }, {
        "uid" : "519f2753fbcf1346",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nAssertionError: Incorrect status code",
        "time" : {
          "start" : 1706630869753,
          "stop" : 1706630870399,
          "duration" : 646
        }
      }, {
        "uid" : "b71c5bfb4d1f4711",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1706630300187,
          "stop" : 1706630300570,
          "duration" : 383
        }
      }, {
        "uid" : "bb8d4c6a3d5aa5bd",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1706630061520,
          "stop" : 1706630061909,
          "duration" : 389
        }
      }, {
        "uid" : "2e6ca177dd6f0519",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1706484251724,
          "stop" : 1706484252111,
          "duration" : 387
        }
      }, {
        "uid" : "85f033d2a3c9411f",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1706282538329,
          "stop" : 1706282538678,
          "duration" : 349
        }
      } ]
    },
    "tags" : [ "@pytest.mark.xfail" ]
  },
  "source" : "75c4750b5b48f262.json",
  "parameterValues" : [ ]
}