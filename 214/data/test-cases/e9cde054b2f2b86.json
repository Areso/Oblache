{
  "uid" : "e9cde054b2f2b86",
  "name" : "POST create_docker_container_without_token",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_create_docker_container_without_token",
  "historyId" : "f833256fb8ca072b26357ead25c8b408",
  "time" : {
    "start" : 1731288433142,
    "stop" : 1731288433656,
    "duration" : 514
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 400",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f56bee03890>\n\n    @allure.title('POST create_docker_container_without_token')\n    def test_post_create_docker_container_without_token(self):\n        result = API.post_create_docker_container(token='incorrect_token')\n>       Checking.check_status_code(result, 401)\n\ntests_api/test_bd.py:404: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 401\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 400",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f56bee03890>\n\n    @allure.title('POST create_docker_container_without_token')\n    def test_post_create_docker_container_without_token(self):\n        result = API.post_create_docker_container(token='incorrect_token')\n>       Checking.check_status_code(result, 401)\n\ntests_api/test_bd.py:404: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 401\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_create_docker_container",
      "time" : {
        "start" : 1731288433142,
        "stop" : 1731288433656,
        "duration" : 514
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_create",
        "time" : {
          "start" : 1731288433656,
          "stop" : 1731288433656,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1731288433656,
          "stop" : 1731288433656,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Url: https://dbend.areso.pro/container_create",
          "time" : {
            "start" : 1731288433656,
            "stop" : 1731288433656,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'incorrect_token'}",
          "time" : {
            "start" : 1731288433656,
            "stop" : 1731288433656,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"docker_image\": \"nginx\", \"int_ports\": \"80\", \"env\": 3, \"region\": 3}",
          "time" : {
            "start" : 1731288433656,
            "stop" : 1731288433656,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 3,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1731288433656,
          "stop" : 1731288433656,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 400",
          "time" : {
            "start" : 1731288433656,
            "stop" : 1731288433656,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n    \"msg_code\": -1,\n    \"msg\": \"endpoint is disabled\"\n}\n",
          "time" : {
            "start" : 1731288433656,
            "stop" : 1731288433656,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 8,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 401 == Response status code: 400",
      "time" : {
        "start" : 1731288433656,
        "stop" : 1731288433656,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 400\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 10,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1148-756"
  }, {
    "name" : "thread",
    "value" : "2265-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 20,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 70,
        "unknown" : 0,
        "total" : 93
      },
      "items" : [ {
        "uid" : "7fb7d45348d2ce62",
        "reportUrl" : "https://Areso.github.io/Oblache/213//#testresult/7fb7d45348d2ce62",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1731202626990,
          "stop" : 1731202627308,
          "duration" : 318
        }
      }, {
        "uid" : "b0c967905ca6d0b7",
        "reportUrl" : "https://Areso.github.io/Oblache/212//#testresult/b0c967905ca6d0b7",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1731115409465,
          "stop" : 1731115409845,
          "duration" : 380
        }
      }, {
        "uid" : "4ae7ad73a3c62d62",
        "reportUrl" : "https://Areso.github.io/Oblache/211//#testresult/4ae7ad73a3c62d62",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1731029154331,
          "stop" : 1731029154837,
          "duration" : 506
        }
      }, {
        "uid" : "b71d66bb7afcc803",
        "reportUrl" : "https://Areso.github.io/Oblache/210//#testresult/b71d66bb7afcc803",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1730942746335,
          "stop" : 1730942746841,
          "duration" : 506
        }
      }, {
        "uid" : "8459479c443bcf04",
        "reportUrl" : "https://Areso.github.io/Oblache/209//#testresult/8459479c443bcf04",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1730856295955,
          "stop" : 1730856296250,
          "duration" : 295
        }
      }, {
        "uid" : "a8ab9e7d7d642a94",
        "reportUrl" : "https://Areso.github.io/Oblache/208//#testresult/a8ab9e7d7d642a94",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1730769936833,
          "stop" : 1730769937343,
          "duration" : 510
        }
      }, {
        "uid" : "5e35654c0b3c8d1f",
        "reportUrl" : "https://Areso.github.io/Oblache/207//#testresult/5e35654c0b3c8d1f",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1730684199406,
          "stop" : 1730684199838,
          "duration" : 432
        }
      }, {
        "uid" : "a7f2c9da9c4bc139",
        "reportUrl" : "https://Areso.github.io/Oblache/206//#testresult/a7f2c9da9c4bc139",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1730597965023,
          "stop" : 1730597965338,
          "duration" : 315
        }
      }, {
        "uid" : "b21f48dcec709fd9",
        "reportUrl" : "https://Areso.github.io/Oblache/205//#testresult/b21f48dcec709fd9",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1730510728541,
          "stop" : 1730510729062,
          "duration" : 521
        }
      }, {
        "uid" : "556391635c1878a6",
        "reportUrl" : "https://Areso.github.io/Oblache/204//#testresult/556391635c1878a6",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1730425266446,
          "stop" : 1730425266957,
          "duration" : 511
        }
      }, {
        "uid" : "a62bfcbc3f60f16d",
        "reportUrl" : "https://Areso.github.io/Oblache/203//#testresult/a62bfcbc3f60f16d",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1730338101680,
          "stop" : 1730338102189,
          "duration" : 509
        }
      }, {
        "uid" : "ce6f275e18b4b67f",
        "reportUrl" : "https://Areso.github.io/Oblache/202//#testresult/ce6f275e18b4b67f",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1730251643726,
          "stop" : 1730251644223,
          "duration" : 497
        }
      }, {
        "uid" : "498e76aff710e2fd",
        "reportUrl" : "https://Areso.github.io/Oblache/201//#testresult/498e76aff710e2fd",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1730165306434,
          "stop" : 1730165306733,
          "duration" : 299
        }
      }, {
        "uid" : "a0982e47ae8c202d",
        "reportUrl" : "https://Areso.github.io/Oblache/200//#testresult/a0982e47ae8c202d",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1730079487422,
          "stop" : 1730079487926,
          "duration" : 504
        }
      }, {
        "uid" : "d0e0b932c6562725",
        "reportUrl" : "https://Areso.github.io/Oblache/199//#testresult/d0e0b932c6562725",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1729993163374,
          "stop" : 1729993163700,
          "duration" : 326
        }
      }, {
        "uid" : "6d4d3d14757e4dce",
        "reportUrl" : "https://Areso.github.io/Oblache/198//#testresult/6d4d3d14757e4dce",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1729905867714,
          "stop" : 1729905868227,
          "duration" : 513
        }
      }, {
        "uid" : "ba30c0107f93bd8f",
        "reportUrl" : "https://Areso.github.io/Oblache/197//#testresult/ba30c0107f93bd8f",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1729819649158,
          "stop" : 1729819649524,
          "duration" : 366
        }
      }, {
        "uid" : "649f38e39cd40877",
        "reportUrl" : "https://Areso.github.io/Oblache/196//#testresult/649f38e39cd40877",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1729733183522,
          "stop" : 1729733184042,
          "duration" : 520
        }
      }, {
        "uid" : "dbad911f2919bc77",
        "reportUrl" : "https://Areso.github.io/Oblache/195//#testresult/dbad911f2919bc77",
        "status" : "passed",
        "time" : {
          "start" : 1729646758887,
          "stop" : 1729646759184,
          "duration" : 297
        }
      }, {
        "uid" : "bd05af06c9d34553",
        "reportUrl" : "https://Areso.github.io/Oblache/194//#testresult/bd05af06c9d34553",
        "status" : "passed",
        "time" : {
          "start" : 1729560432193,
          "stop" : 1729560432506,
          "duration" : 313
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "e9cde054b2f2b86.json",
  "parameterValues" : [ ]
}