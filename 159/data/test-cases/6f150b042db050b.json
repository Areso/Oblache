{
  "uid" : "6f150b042db050b",
  "name" : "Get token.",
  "fullName" : "tests_api.test_bd.TestGET#test_get_token",
  "historyId" : "9ab236e108298f8405508aacc36d87d8",
  "time" : {
    "start" : 1726535337669,
    "stop" : 1726535337669,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
  "statusTrace" : "self = <Response [502]>, kwargs = {}\n\n    def json(self, **kwargs):\n        r\"\"\"Returns the json-encoded content of a response, if any.\n    \n        :param \\*\\*kwargs: Optional arguments that ``json.loads`` takes.\n        :raises requests.exceptions.JSONDecodeError: If the response body does not\n            contain valid json.\n        \"\"\"\n    \n        if not self.encoding and self.content and len(self.content) > 3:\n            # No encoding set. JSON RFC 4627 section 3 states we should expect\n            # UTF-8, -16 or -32. Detect which one to use; If the detection or\n            # decoding fails, fall back to `self.text` (using charset_normalizer to make\n            # a best guess).\n            encoding = guess_json_utf(self.content)\n            if encoding is not None:\n                try:\n                    return complexjson.loads(self.content.decode(encoding), **kwargs)\n                except UnicodeDecodeError:\n                    # Wrong UTF codec detected; usually because it's not UTF-8\n                    # but some other 8-bit codec.  This is an RFC violation,\n                    # and the server didn't bother to tell us what codec *was*\n                    # used.\n                    pass\n                except JSONDecodeError as e:\n                    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\n    \n        try:\n>           return complexjson.loads(self.text, **kwargs)\n\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/requests/models.py:974: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fec3f2f2930>\ns = '<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/json/decoder.py:355: JSONDecodeError\n\nDuring handling of the above exception, another exception occurred:\n\n    @pytest.fixture()\n    def get_token():\n        \"\"\"\n        Method return:\\n\n        token: str\\n\n        body: dict\\n\n        new_password: str\\n\n        old_password: str\\n\n        email: str\n        :returns: token: str, body: dict, new_password: str, old_password:str, email: str\n        \"\"\"\n        load_dotenv()\n        email = os.getenv('EMAIL')\n        old_password = os.getenv('PASSWORD')\n        new_password = '123456789'\n        try:\n            body = {\"email\": email, \"password\": f'{old_password}'}\n            result = requests.post('https://dbend.areso.pro/login', json=body)\n            token = result.json()['token']\n            if token != {}:\n                new_password, old_password = old_password, new_password\n            Checking.check_status_code(result, 200)\n            return token, body, new_password, old_password, email\n        except Exception as ex:\n            print(ex)\n            old_password, new_password = new_password, old_password\n            body = {\"email\": email, \"password\": f'{old_password}'}\n            result = requests.post('https://dbend.areso.pro/login', json=body)\n>           token = result.json()['token']\n\nconftest.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>, kwargs = {}\n\n    def json(self, **kwargs):\n        r\"\"\"Returns the json-encoded content of a response, if any.\n    \n        :param \\*\\*kwargs: Optional arguments that ``json.loads`` takes.\n        :raises requests.exceptions.JSONDecodeError: If the response body does not\n            contain valid json.\n        \"\"\"\n    \n        if not self.encoding and self.content and len(self.content) > 3:\n            # No encoding set. JSON RFC 4627 section 3 states we should expect\n            # UTF-8, -16 or -32. Detect which one to use; If the detection or\n            # decoding fails, fall back to `self.text` (using charset_normalizer to make\n            # a best guess).\n            encoding = guess_json_utf(self.content)\n            if encoding is not None:\n                try:\n                    return complexjson.loads(self.content.decode(encoding), **kwargs)\n                except UnicodeDecodeError:\n                    # Wrong UTF codec detected; usually because it's not UTF-8\n                    # but some other 8-bit codec.  This is an RFC violation,\n                    # and the server didn't bother to tell us what codec *was*\n                    # used.\n                    pass\n                except JSONDecodeError as e:\n                    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\n    \n        try:\n            return complexjson.loads(self.text, **kwargs)\n        except JSONDecodeError as e:\n            # Catch JSON-related errors and raise as requests.JSONDecodeError\n            # This aliases json.JSONDecodeError and simplejson.JSONDecodeError\n>           raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\nE           requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/requests/models.py:978: JSONDecodeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_token",
    "time" : {
      "start" : 1726535337669,
      "stop" : 1726535338645,
      "duration" : 976
    },
    "status" : "broken",
    "statusMessage" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 902, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/Oblache/Oblache/conftest.py\", line 40, in get_token\n    token = result.json()['token']\n            ^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/requests/models.py\", line 978, in json\n    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "GET"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestGET"
  }, {
    "name" : "host",
    "value" : "fv-az1773-824"
  }, {
    "name" : "thread",
    "value" : "2267-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 36,
        "unknown" : 0,
        "total" : 38
      },
      "items" : [ {
        "uid" : "5b5cf70bdd902c10",
        "reportUrl" : "https://Areso.github.io/Oblache/158//#testresult/5b5cf70bdd902c10",
        "status" : "passed",
        "time" : {
          "start" : 1726450011317,
          "stop" : 1726450011317,
          "duration" : 0
        }
      }, {
        "uid" : "c8df48bb8730212c",
        "reportUrl" : "https://Areso.github.io/Oblache/157//#testresult/c8df48bb8730212c",
        "status" : "passed",
        "time" : {
          "start" : 1726364241346,
          "stop" : 1726364241346,
          "duration" : 0
        }
      }, {
        "uid" : "f6670b5f7ab161a6",
        "reportUrl" : "https://Areso.github.io/Oblache/156//#testresult/f6670b5f7ab161a6",
        "status" : "passed",
        "time" : {
          "start" : 1726276869761,
          "stop" : 1726276869761,
          "duration" : 0
        }
      }, {
        "uid" : "719afc9c7548d7d",
        "reportUrl" : "https://Areso.github.io/Oblache/155//#testresult/719afc9c7548d7d",
        "status" : "passed",
        "time" : {
          "start" : 1726190544145,
          "stop" : 1726190544145,
          "duration" : 0
        }
      }, {
        "uid" : "791a89be74588ed2",
        "reportUrl" : "https://Areso.github.io/Oblache/154//#testresult/791a89be74588ed2",
        "status" : "passed",
        "time" : {
          "start" : 1726104121011,
          "stop" : 1726104121011,
          "duration" : 0
        }
      }, {
        "uid" : "849090386155e77c",
        "reportUrl" : "https://Areso.github.io/Oblache/153//#testresult/849090386155e77c",
        "status" : "passed",
        "time" : {
          "start" : 1726017688568,
          "stop" : 1726017688568,
          "duration" : 0
        }
      }, {
        "uid" : "efd105d3d3887928",
        "reportUrl" : "https://Areso.github.io/Oblache/152//#testresult/efd105d3d3887928",
        "status" : "passed",
        "time" : {
          "start" : 1725931345864,
          "stop" : 1725931345864,
          "duration" : 0
        }
      }, {
        "uid" : "53dc78d426319dfc",
        "reportUrl" : "https://Areso.github.io/Oblache/12//#testresult/53dc78d426319dfc",
        "status" : "passed",
        "time" : {
          "start" : 1725892803445,
          "stop" : 1725892803445,
          "duration" : 0
        }
      }, {
        "uid" : "a387c68794f39750",
        "reportUrl" : "https://Areso.github.io/Oblache/151//#testresult/a387c68794f39750",
        "status" : "passed",
        "time" : {
          "start" : 1725845188983,
          "stop" : 1725845188983,
          "duration" : 0
        }
      }, {
        "uid" : "e54420df3740833f",
        "reportUrl" : "https://Areso.github.io/Oblache/11//#testresult/e54420df3740833f",
        "status" : "passed",
        "time" : {
          "start" : 1725789048453,
          "stop" : 1725789048453,
          "duration" : 0
        }
      }, {
        "uid" : "4eed13e31e32ddbe",
        "reportUrl" : "https://Areso.github.io/Oblache/150//#testresult/4eed13e31e32ddbe",
        "status" : "passed",
        "time" : {
          "start" : 1725758848110,
          "stop" : 1725758848110,
          "duration" : 0
        }
      }, {
        "uid" : "a56eb46b524a7560",
        "reportUrl" : "https://Areso.github.io/Oblache/149//#testresult/a56eb46b524a7560",
        "status" : "passed",
        "time" : {
          "start" : 1725672007226,
          "stop" : 1725672007226,
          "duration" : 0
        }
      }, {
        "uid" : "ada70cc71af7e040",
        "reportUrl" : "https://Areso.github.io/Oblache/148//#testresult/ada70cc71af7e040",
        "status" : "passed",
        "time" : {
          "start" : 1725585811361,
          "stop" : 1725585811361,
          "duration" : 0
        }
      }, {
        "uid" : "ea2453519073fa34",
        "reportUrl" : "https://Areso.github.io/Oblache/10//#testresult/ea2453519073fa34",
        "status" : "passed",
        "time" : {
          "start" : 1725527849040,
          "stop" : 1725527849040,
          "duration" : 0
        }
      }, {
        "uid" : "6cba400f5de9439e",
        "reportUrl" : "https://Areso.github.io/Oblache/9//#testresult/6cba400f5de9439e",
        "status" : "passed",
        "time" : {
          "start" : 1725526754555,
          "stop" : 1725526754555,
          "duration" : 0
        }
      }, {
        "uid" : "383179871e5c09d1",
        "reportUrl" : "https://Areso.github.io/Oblache/147//#testresult/383179871e5c09d1",
        "status" : "passed",
        "time" : {
          "start" : 1725499483939,
          "stop" : 1725499483939,
          "duration" : 0
        }
      }, {
        "uid" : "f7666289796a3091",
        "reportUrl" : "https://Areso.github.io/Oblache/146//#testresult/f7666289796a3091",
        "status" : "passed",
        "time" : {
          "start" : 1725412892499,
          "stop" : 1725412892499,
          "duration" : 0
        }
      }, {
        "uid" : "c37789c8318d674d",
        "reportUrl" : "https://Areso.github.io/Oblache/145//#testresult/c37789c8318d674d",
        "status" : "passed",
        "time" : {
          "start" : 1725326420735,
          "stop" : 1725326420736,
          "duration" : 1
        }
      }, {
        "uid" : "a4f1a38ab1ed5327",
        "reportUrl" : "https://Areso.github.io/Oblache/144//#testresult/a4f1a38ab1ed5327",
        "status" : "passed",
        "time" : {
          "start" : 1725240148556,
          "stop" : 1725240148556,
          "duration" : 0
        }
      }, {
        "uid" : "9c6c162df008fdf",
        "reportUrl" : "https://Areso.github.io/Oblache/143//#testresult/9c6c162df008fdf",
        "status" : "passed",
        "time" : {
          "start" : 1725154777127,
          "stop" : 1725154777127,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "6f150b042db050b.json",
  "parameterValues" : [ ]
}