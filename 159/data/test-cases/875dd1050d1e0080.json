{
  "uid" : "875dd1050d1e0080",
  "name" : "POST login/is_logged/logout",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_login_is_logged_logout",
  "historyId" : "5acbe9eedbdaaded55cefbf9042fc1fd",
  "time" : {
    "start" : 1726535349550,
    "stop" : 1726535349550,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
  "statusTrace" : "self = <Response [502]>, kwargs = {}\n\n    def json(self, **kwargs):\n        r\"\"\"Returns the json-encoded content of a response, if any.\n    \n        :param \\*\\*kwargs: Optional arguments that ``json.loads`` takes.\n        :raises requests.exceptions.JSONDecodeError: If the response body does not\n            contain valid json.\n        \"\"\"\n    \n        if not self.encoding and self.content and len(self.content) > 3:\n            # No encoding set. JSON RFC 4627 section 3 states we should expect\n            # UTF-8, -16 or -32. Detect which one to use; If the detection or\n            # decoding fails, fall back to `self.text` (using charset_normalizer to make\n            # a best guess).\n            encoding = guess_json_utf(self.content)\n            if encoding is not None:\n                try:\n                    return complexjson.loads(self.content.decode(encoding), **kwargs)\n                except UnicodeDecodeError:\n                    # Wrong UTF codec detected; usually because it's not UTF-8\n                    # but some other 8-bit codec.  This is an RFC violation,\n                    # and the server didn't bother to tell us what codec *was*\n                    # used.\n                    pass\n                except JSONDecodeError as e:\n                    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\n    \n        try:\n>           return complexjson.loads(self.text, **kwargs)\n\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/requests/models.py:974: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fec3f2f2930>\ns = '<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/json/decoder.py:355: JSONDecodeError\n\nDuring handling of the above exception, another exception occurred:\n\n    @pytest.fixture()\n    def get_token():\n        \"\"\"\n        Method return:\\n\n        token: str\\n\n        body: dict\\n\n        new_password: str\\n\n        old_password: str\\n\n        email: str\n        :returns: token: str, body: dict, new_password: str, old_password:str, email: str\n        \"\"\"\n        load_dotenv()\n        email = os.getenv('EMAIL')\n        old_password = os.getenv('PASSWORD')\n        new_password = '123456789'\n        try:\n            body = {\"email\": email, \"password\": f'{old_password}'}\n            result = requests.post('https://dbend.areso.pro/login', json=body)\n            token = result.json()['token']\n            if token != {}:\n                new_password, old_password = old_password, new_password\n            Checking.check_status_code(result, 200)\n            return token, body, new_password, old_password, email\n        except Exception as ex:\n            print(ex)\n            old_password, new_password = new_password, old_password\n            body = {\"email\": email, \"password\": f'{old_password}'}\n            result = requests.post('https://dbend.areso.pro/login', json=body)\n>           token = result.json()['token']\n\nconftest.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>, kwargs = {}\n\n    def json(self, **kwargs):\n        r\"\"\"Returns the json-encoded content of a response, if any.\n    \n        :param \\*\\*kwargs: Optional arguments that ``json.loads`` takes.\n        :raises requests.exceptions.JSONDecodeError: If the response body does not\n            contain valid json.\n        \"\"\"\n    \n        if not self.encoding and self.content and len(self.content) > 3:\n            # No encoding set. JSON RFC 4627 section 3 states we should expect\n            # UTF-8, -16 or -32. Detect which one to use; If the detection or\n            # decoding fails, fall back to `self.text` (using charset_normalizer to make\n            # a best guess).\n            encoding = guess_json_utf(self.content)\n            if encoding is not None:\n                try:\n                    return complexjson.loads(self.content.decode(encoding), **kwargs)\n                except UnicodeDecodeError:\n                    # Wrong UTF codec detected; usually because it's not UTF-8\n                    # but some other 8-bit codec.  This is an RFC violation,\n                    # and the server didn't bother to tell us what codec *was*\n                    # used.\n                    pass\n                except JSONDecodeError as e:\n                    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\n    \n        try:\n            return complexjson.loads(self.text, **kwargs)\n        except JSONDecodeError as e:\n            # Catch JSON-related errors and raise as requests.JSONDecodeError\n            # This aliases json.JSONDecodeError and simplejson.JSONDecodeError\n>           raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\nE           requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/requests/models.py:978: JSONDecodeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_token",
    "time" : {
      "start" : 1726535349551,
      "stop" : 1726535350521,
      "duration" : 970
    },
    "status" : "broken",
    "statusMessage" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 902, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/Oblache/Oblache/conftest.py\", line 40, in get_token\n    token = result.json()['token']\n            ^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/requests/models.py\", line 978, in json\n    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1773-824"
  }, {
    "name" : "thread",
    "value" : "2267-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 35,
        "unknown" : 0,
        "total" : 38
      },
      "items" : [ {
        "uid" : "5d9282bd192776bd",
        "reportUrl" : "https://Areso.github.io/Oblache/158//#testresult/5d9282bd192776bd",
        "status" : "passed",
        "time" : {
          "start" : 1726450019804,
          "stop" : 1726450020874,
          "duration" : 1070
        }
      }, {
        "uid" : "277ff0ee4f855461",
        "reportUrl" : "https://Areso.github.io/Oblache/157//#testresult/277ff0ee4f855461",
        "status" : "passed",
        "time" : {
          "start" : 1726364252792,
          "stop" : 1726364254315,
          "duration" : 1523
        }
      }, {
        "uid" : "6267bebf10543a03",
        "reportUrl" : "https://Areso.github.io/Oblache/156//#testresult/6267bebf10543a03",
        "status" : "passed",
        "time" : {
          "start" : 1726276878046,
          "stop" : 1726276879147,
          "duration" : 1101
        }
      }, {
        "uid" : "1638876152e7c6a9",
        "reportUrl" : "https://Areso.github.io/Oblache/155//#testresult/1638876152e7c6a9",
        "status" : "passed",
        "time" : {
          "start" : 1726190551542,
          "stop" : 1726190552525,
          "duration" : 983
        }
      }, {
        "uid" : "b9c0acc31c6a9eb5",
        "reportUrl" : "https://Areso.github.io/Oblache/154//#testresult/b9c0acc31c6a9eb5",
        "status" : "passed",
        "time" : {
          "start" : 1726104132546,
          "stop" : 1726104134062,
          "duration" : 1516
        }
      }, {
        "uid" : "6848de133a1d6473",
        "reportUrl" : "https://Areso.github.io/Oblache/153//#testresult/6848de133a1d6473",
        "status" : "passed",
        "time" : {
          "start" : 1726017696672,
          "stop" : 1726017697610,
          "duration" : 938
        }
      }, {
        "uid" : "34e587a08c6e2e35",
        "reportUrl" : "https://Areso.github.io/Oblache/152//#testresult/34e587a08c6e2e35",
        "status" : "passed",
        "time" : {
          "start" : 1725931353266,
          "stop" : 1725931354204,
          "duration" : 938
        }
      }, {
        "uid" : "4acf0d94e1dacb8a",
        "reportUrl" : "https://Areso.github.io/Oblache/12//#testresult/4acf0d94e1dacb8a",
        "status" : "passed",
        "time" : {
          "start" : 1725892810959,
          "stop" : 1725892811926,
          "duration" : 967
        }
      }, {
        "uid" : "3110aec9c16c7556",
        "reportUrl" : "https://Areso.github.io/Oblache/151//#testresult/3110aec9c16c7556",
        "status" : "passed",
        "time" : {
          "start" : 1725845197047,
          "stop" : 1725845197991,
          "duration" : 944
        }
      }, {
        "uid" : "dcdabfdbfffaa5a6",
        "reportUrl" : "https://Areso.github.io/Oblache/11//#testresult/dcdabfdbfffaa5a6",
        "status" : "passed",
        "time" : {
          "start" : 1725789056288,
          "stop" : 1725789057220,
          "duration" : 932
        }
      }, {
        "uid" : "d3bf353a1ecc66dd",
        "reportUrl" : "https://Areso.github.io/Oblache/150//#testresult/d3bf353a1ecc66dd",
        "status" : "passed",
        "time" : {
          "start" : 1725758856655,
          "stop" : 1725758857739,
          "duration" : 1084
        }
      }, {
        "uid" : "3dfb3913ce18350d",
        "reportUrl" : "https://Areso.github.io/Oblache/149//#testresult/3dfb3913ce18350d",
        "status" : "passed",
        "time" : {
          "start" : 1725672019399,
          "stop" : 1725672020907,
          "duration" : 1508
        }
      }, {
        "uid" : "8a5b5592ea4c4143",
        "reportUrl" : "https://Areso.github.io/Oblache/148//#testresult/8a5b5592ea4c4143",
        "status" : "passed",
        "time" : {
          "start" : 1725585819546,
          "stop" : 1725585820479,
          "duration" : 933
        }
      }, {
        "uid" : "521caf1339398650",
        "reportUrl" : "https://Areso.github.io/Oblache/10//#testresult/521caf1339398650",
        "status" : "passed",
        "time" : {
          "start" : 1725527867895,
          "stop" : 1725527868835,
          "duration" : 940
        }
      }, {
        "uid" : "feb27ece3b085b07",
        "reportUrl" : "https://Areso.github.io/Oblache/9//#testresult/feb27ece3b085b07",
        "status" : "passed",
        "time" : {
          "start" : 1725526773057,
          "stop" : 1725526774137,
          "duration" : 1080
        }
      }, {
        "uid" : "aef1a4b492b13f53",
        "reportUrl" : "https://Areso.github.io/Oblache/147//#testresult/aef1a4b492b13f53",
        "status" : "passed",
        "time" : {
          "start" : 1725499491868,
          "stop" : 1725499492951,
          "duration" : 1083
        }
      }, {
        "uid" : "c211e758d5fc04e3",
        "reportUrl" : "https://Areso.github.io/Oblache/146//#testresult/c211e758d5fc04e3",
        "status" : "passed",
        "time" : {
          "start" : 1725412903854,
          "stop" : 1725412905403,
          "duration" : 1549
        }
      }, {
        "uid" : "3c5062bc40f25eb8",
        "reportUrl" : "https://Areso.github.io/Oblache/145//#testresult/3c5062bc40f25eb8",
        "status" : "passed",
        "time" : {
          "start" : 1725326432135,
          "stop" : 1725326433680,
          "duration" : 1545
        }
      }, {
        "uid" : "96232b971fe5af",
        "reportUrl" : "https://Areso.github.io/Oblache/144//#testresult/96232b971fe5af",
        "status" : "passed",
        "time" : {
          "start" : 1725240159928,
          "stop" : 1725240161455,
          "duration" : 1527
        }
      }, {
        "uid" : "d9dfcc07f1cd2177",
        "reportUrl" : "https://Areso.github.io/Oblache/143//#testresult/d9dfcc07f1cd2177",
        "status" : "passed",
        "time" : {
          "start" : 1725154785149,
          "stop" : 1725154786206,
          "duration" : 1057
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "875dd1050d1e0080.json",
  "parameterValues" : [ ]
}