{
  "uid" : "3bbb70b783e5218e",
  "name" : "POST create_docker_container_without_token",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_create_docker_container_without_token",
  "historyId" : "f833256fb8ca072b26357ead25c8b408",
  "time" : {
    "start" : 1734917291774,
    "stop" : 1734917292297,
    "duration" : 523
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 400",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fda1862a690>\n\n    @allure.title('POST create_docker_container_without_token')\n    def test_post_create_docker_container_without_token(self):\n        result = API.post_create_docker_container(token='incorrect_token')\n>       Checking.check_status_code(result, 401)\n\ntests_api/test_bd.py:404: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 401\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 400",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fda1862a690>\n\n    @allure.title('POST create_docker_container_without_token')\n    def test_post_create_docker_container_without_token(self):\n        result = API.post_create_docker_container(token='incorrect_token')\n>       Checking.check_status_code(result, 401)\n\ntests_api/test_bd.py:404: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 401\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_create_docker_container",
      "time" : {
        "start" : 1734917291774,
        "stop" : 1734917292297,
        "duration" : 523
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_create",
        "time" : {
          "start" : 1734917292297,
          "stop" : 1734917292297,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1734917292297,
          "stop" : 1734917292297,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Url: https://dbend.areso.pro/container_create",
          "time" : {
            "start" : 1734917292297,
            "stop" : 1734917292297,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'incorrect_token'}",
          "time" : {
            "start" : 1734917292297,
            "stop" : 1734917292297,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"docker_image\": \"nginx\", \"int_ports\": \"80\", \"env\": 3, \"region\": 3}",
          "time" : {
            "start" : 1734917292297,
            "stop" : 1734917292297,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 3,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1734917292297,
          "stop" : 1734917292297,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 400",
          "time" : {
            "start" : 1734917292297,
            "stop" : 1734917292297,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n    \"msg_code\": -1,\n    \"msg\": \"endpoint is disabled\"\n}\n",
          "time" : {
            "start" : 1734917292297,
            "stop" : 1734917292297,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 8,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 401 == Response status code: 400",
      "time" : {
        "start" : 1734917292297,
        "stop" : 1734917292297,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 400\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 10,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1694-299"
  }, {
    "name" : "thread",
    "value" : "2439-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 61,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 70,
        "unknown" : 0,
        "total" : 134
      },
      "items" : [ {
        "uid" : "7075bbe40864dee6",
        "reportUrl" : "https://Areso.github.io/Oblache/255//#testresult/7075bbe40864dee6",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1734831595431,
          "stop" : 1734831595739,
          "duration" : 308
        }
      }, {
        "uid" : "5070649c199bfabf",
        "reportUrl" : "https://Areso.github.io/Oblache/254//#testresult/5070649c199bfabf",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1734744316072,
          "stop" : 1734744316388,
          "duration" : 316
        }
      }, {
        "uid" : "bcd1cdf519e9ab2e",
        "reportUrl" : "https://Areso.github.io/Oblache/253//#testresult/bcd1cdf519e9ab2e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1734658024702,
          "stop" : 1734658025018,
          "duration" : 316
        }
      }, {
        "uid" : "749c537f1b8b85da",
        "reportUrl" : "https://Areso.github.io/Oblache/252//#testresult/749c537f1b8b85da",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1734572387396,
          "stop" : 1734572387899,
          "duration" : 503
        }
      }, {
        "uid" : "bc98a814d78f0fb5",
        "reportUrl" : "https://Areso.github.io/Oblache/250//#testresult/bc98a814d78f0fb5",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1734399709482,
          "stop" : 1734399709794,
          "duration" : 312
        }
      }, {
        "uid" : "8b0e39aa7d9cac89",
        "reportUrl" : "https://Areso.github.io/Oblache/249//#testresult/8b0e39aa7d9cac89",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1734313543884,
          "stop" : 1734313544267,
          "duration" : 383
        }
      }, {
        "uid" : "28f315ac140303bd",
        "reportUrl" : "https://Areso.github.io/Oblache/248//#testresult/28f315ac140303bd",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1734227292896,
          "stop" : 1734227293270,
          "duration" : 374
        }
      }, {
        "uid" : "c1e8cbb568f762cf",
        "reportUrl" : "https://Areso.github.io/Oblache/247//#testresult/c1e8cbb568f762cf",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1734140340914,
          "stop" : 1734140341230,
          "duration" : 316
        }
      }, {
        "uid" : "e07cd76955150ced",
        "reportUrl" : "https://Areso.github.io/Oblache/246//#testresult/e07cd76955150ced",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1734054209313,
          "stop" : 1734054209834,
          "duration" : 521
        }
      }, {
        "uid" : "136e7315e2b4b950",
        "reportUrl" : "https://Areso.github.io/Oblache/245//#testresult/136e7315e2b4b950",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1733967738322,
          "stop" : 1733967738823,
          "duration" : 501
        }
      }, {
        "uid" : "b4e127b658a3b486",
        "reportUrl" : "https://Areso.github.io/Oblache/244//#testresult/b4e127b658a3b486",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1733881359862,
          "stop" : 1733881360354,
          "duration" : 492
        }
      }, {
        "uid" : "4774a295bc4b1eee",
        "reportUrl" : "https://Areso.github.io/Oblache/243//#testresult/4774a295bc4b1eee",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1733795043430,
          "stop" : 1733795043982,
          "duration" : 552
        }
      }, {
        "uid" : "d757c44202e6390e",
        "reportUrl" : "https://Areso.github.io/Oblache/242//#testresult/d757c44202e6390e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1733708735263,
          "stop" : 1733708735776,
          "duration" : 513
        }
      }, {
        "uid" : "2b71a03d75cbb5bb",
        "reportUrl" : "https://Areso.github.io/Oblache/241//#testresult/2b71a03d75cbb5bb",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1733622503945,
          "stop" : 1733622504295,
          "duration" : 350
        }
      }, {
        "uid" : "5f6c8d69f479cb92",
        "reportUrl" : "https://Areso.github.io/Oblache/240//#testresult/5f6c8d69f479cb92",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1733535631502,
          "stop" : 1733535631832,
          "duration" : 330
        }
      }, {
        "uid" : "e8a9f25407a4a843",
        "reportUrl" : "https://Areso.github.io/Oblache/239//#testresult/e8a9f25407a4a843",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1733449277443,
          "stop" : 1733449277819,
          "duration" : 376
        }
      }, {
        "uid" : "9aab6f6b8df53499",
        "reportUrl" : "https://Areso.github.io/Oblache/238//#testresult/9aab6f6b8df53499",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1733362947442,
          "stop" : 1733362947919,
          "duration" : 477
        }
      }, {
        "uid" : "91990c0902b48304",
        "reportUrl" : "https://Areso.github.io/Oblache/237//#testresult/91990c0902b48304",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1733276574830,
          "stop" : 1733276575344,
          "duration" : 514
        }
      }, {
        "uid" : "7821d888e9407401",
        "reportUrl" : "https://Areso.github.io/Oblache/236//#testresult/7821d888e9407401",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1733190140933,
          "stop" : 1733190141292,
          "duration" : 359
        }
      }, {
        "uid" : "6a98a4bf2f86fdb0",
        "reportUrl" : "https://Areso.github.io/Oblache/235//#testresult/6a98a4bf2f86fdb0",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1733103823405,
          "stop" : 1733103823708,
          "duration" : 303
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "3bbb70b783e5218e.json",
  "parameterValues" : [ ]
}