{
  "uid" : "a4424a896c14db40",
  "name" : "Bad request.",
  "fullName" : "tests_api.test_bd.TestGET#test_get_with_bad_request",
  "historyId" : "5156f5dedc3d46e33a62122a588c6956",
  "time" : {
    "start" : 1712174720227,
    "stop" : 1712174720546,
    "duration" : 319
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code",
  "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7fcfcbc98800>\n\n    @allure.title('Bad request.')\n    def test_get_with_bad_request(self):\n        result_get = API.get_bad_request()\n>       Checking.check_status_code(result_get, 404)\n\ntests_api/test_bd.py:116: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 404\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response JSON\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, 'Incorrect status code'\nE           AssertionError: Incorrect status code\n\ntests_api/utils/checking.py:18: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code",
    "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7fcfcbc98800>\n\n    @allure.title('Bad request.')\n    def test_get_with_bad_request(self):\n        result_get = API.get_bad_request()\n>       Checking.check_status_code(result_get, 404)\n\ntests_api/test_bd.py:116: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 404\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response JSON\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, 'Incorrect status code'\nE           AssertionError: Incorrect status code\n\ntests_api/utils/checking.py:18: AssertionError",
    "steps" : [ {
      "name" : "get_bad_request",
      "time" : {
        "start" : 1712174720227,
        "stop" : 1712174720546,
        "duration" : 319
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "GET https://dbend.areso.pro/bad_request",
        "time" : {
          "start" : 1712174720227,
          "stop" : 1712174720546,
          "duration" : 319
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 502",
          "time" : {
            "start" : 1712174720546,
            "stop" : 1712174720546,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Response: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
          "time" : {
            "start" : 1712174720546,
            "stop" : 1712174720546,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
        "time" : {
          "start" : 1712174720546,
          "stop" : 1712174720546,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 4,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 404 == Response status code: 502",
      "time" : {
        "start" : 1712174720546,
        "stop" : 1712174720546,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 18, in check_status_code\n    assert status_code == result.status_code, 'Incorrect status code'\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 6,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "GET"
  }, {
    "name" : "epic",
    "value" : "GET REQUESTS"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestGET"
  }, {
    "name" : "host",
    "value" : "fv-az1391-135"
  }, {
    "name" : "thread",
    "value" : "2350-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 8,
        "unknown" : 0,
        "total" : 9
      },
      "items" : [ {
        "uid" : "3700feb661fe2e12",
        "reportUrl" : "https://Areso.github.io/Oblache/73//#testresult/3700feb661fe2e12",
        "status" : "passed",
        "time" : {
          "start" : 1712173470142,
          "stop" : 1712173470655,
          "duration" : 513
        }
      }, {
        "uid" : "453e4a846d5315b3",
        "reportUrl" : "https://Areso.github.io/Oblache/71//#testresult/453e4a846d5315b3",
        "status" : "passed",
        "time" : {
          "start" : 1711374183849,
          "stop" : 1711374184222,
          "duration" : 373
        }
      }, {
        "uid" : "4bea87b1eaa554ca",
        "reportUrl" : "https://Areso.github.io/Oblache/70//#testresult/4bea87b1eaa554ca",
        "status" : "passed",
        "time" : {
          "start" : 1711321343341,
          "stop" : 1711321343649,
          "duration" : 308
        }
      }, {
        "uid" : "79770fadf0ac2007",
        "reportUrl" : "https://Areso.github.io/Oblache/69//#testresult/79770fadf0ac2007",
        "status" : "passed",
        "time" : {
          "start" : 1711020832374,
          "stop" : 1711020832712,
          "duration" : 338
        }
      }, {
        "uid" : "c5ab1e09af084226",
        "reportUrl" : "https://Areso.github.io/Oblache/68//#testresult/c5ab1e09af084226",
        "status" : "passed",
        "time" : {
          "start" : 1710944062072,
          "stop" : 1710944062430,
          "duration" : 358
        }
      }, {
        "uid" : "a0e81ef3d049824f",
        "reportUrl" : "https://Areso.github.io/Oblache/67//#testresult/a0e81ef3d049824f",
        "status" : "passed",
        "time" : {
          "start" : 1710943334639,
          "stop" : 1710943334997,
          "duration" : 358
        }
      }, {
        "uid" : "510f8780cded792d",
        "reportUrl" : "https://Areso.github.io/Oblache/66//#testresult/510f8780cded792d",
        "status" : "passed",
        "time" : {
          "start" : 1710942876270,
          "stop" : 1710942876572,
          "duration" : 302
        }
      }, {
        "uid" : "b87df36ad7231e0c",
        "reportUrl" : "https://Areso.github.io/Oblache/65//#testresult/b87df36ad7231e0c",
        "status" : "passed",
        "time" : {
          "start" : 1710942236145,
          "stop" : 1710942236460,
          "duration" : 315
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "a4424a896c14db40.json",
  "parameterValues" : [ ]
}