{
  "uid" : "d724b9e51cfabd25",
  "name" : "POST checking ports_len positive",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_checking_ports_len_positive",
  "historyId" : "c6f631852f230d7f46e21d1143ab0d56",
  "time" : {
    "start" : 1745459073495,
    "stop" : 1745459073867,
    "duration" : 372
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 400",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7ff4b7b1acc0>\n\n    @allure.title('POST checking ports_len positive')\n    def test_post_checking_ports_len_positive(self):\n        result = API.post_create_docker_container_checking_ports(\n            token=TestPOST.token,\n            port_len=\"80-89\")\n>       Checking.check_status_code(result, 201)\n\ntests_api/test_bd.py:374: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 400",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7ff4b7b1acc0>\n\n    @allure.title('POST checking ports_len positive')\n    def test_post_checking_ports_len_positive(self):\n        result = API.post_create_docker_container_checking_ports(\n            token=TestPOST.token,\n            port_len=\"80-89\")\n>       Checking.check_status_code(result, 201)\n\ntests_api/test_bd.py:374: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_create_docker_container",
      "time" : {
        "start" : 1745459073495,
        "stop" : 1745459073867,
        "duration" : 372
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_create",
        "time" : {
          "start" : 1745459073867,
          "stop" : 1745459073867,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1745459073867,
          "stop" : 1745459073867,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': '8f58b6d6-8d98-4607-a41c-f8683f6d8bd4'}",
          "time" : {
            "start" : 1745459073867,
            "stop" : 1745459073867,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"docker_image\": \"nginx\", \"int_ports\": f\"80-89\", \"env\": 3, \"region\": 3}",
          "time" : {
            "start" : 1745459073867,
            "stop" : 1745459073867,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1745459073867,
          "stop" : 1745459073867,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 400",
          "time" : {
            "start" : 1745459073867,
            "stop" : 1745459073867,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n    \"msg_code\": -1,\n    \"msg\": \"endpoint is disabled\"\n}\n",
          "time" : {
            "start" : 1745459073867,
            "stop" : 1745459073867,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 201 == Response status code: 400",
      "time" : {
        "start" : 1745459073867,
        "stop" : 1745459073867,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 400\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 9,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1914-240"
  }, {
    "name" : "thread",
    "value" : "2462-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 183,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 70,
        "unknown" : 0,
        "total" : 256
      },
      "items" : [ {
        "uid" : "fc59c5b20045cbc6",
        "reportUrl" : "https://Areso.github.io/Oblache/377//#testresult/fc59c5b20045cbc6",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1745372646341,
          "stop" : 1745372646643,
          "duration" : 302
        }
      }, {
        "uid" : "fde3fa7046f70954",
        "reportUrl" : "https://Areso.github.io/Oblache/376//#testresult/fde3fa7046f70954",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1745286242114,
          "stop" : 1745286242740,
          "duration" : 626
        }
      }, {
        "uid" : "64e1ecac165de7cd",
        "reportUrl" : "https://Areso.github.io/Oblache/375//#testresult/64e1ecac165de7cd",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1745200086522,
          "stop" : 1745200086826,
          "duration" : 304
        }
      }, {
        "uid" : "cf0ef72f8ef8f2e1",
        "reportUrl" : "https://Areso.github.io/Oblache/374//#testresult/cf0ef72f8ef8f2e1",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1745113741585,
          "stop" : 1745113741918,
          "duration" : 333
        }
      }, {
        "uid" : "cd989fc39d29221e",
        "reportUrl" : "https://Areso.github.io/Oblache/373//#testresult/cd989fc39d29221e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1745026738353,
          "stop" : 1745026738659,
          "duration" : 306
        }
      }, {
        "uid" : "278ae262469498b5",
        "reportUrl" : "https://Areso.github.io/Oblache/372//#testresult/278ae262469498b5",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1744940467431,
          "stop" : 1744940467739,
          "duration" : 308
        }
      }, {
        "uid" : "c529b5689e73d4ca",
        "reportUrl" : "https://Areso.github.io/Oblache/371//#testresult/c529b5689e73d4ca",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1744854187105,
          "stop" : 1744854187465,
          "duration" : 360
        }
      }, {
        "uid" : "c9af24fb9d993491",
        "reportUrl" : "https://Areso.github.io/Oblache/370//#testresult/c9af24fb9d993491",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1744767877531,
          "stop" : 1744767877889,
          "duration" : 358
        }
      }, {
        "uid" : "c020ba77a99e63cf",
        "reportUrl" : "https://Areso.github.io/Oblache/369//#testresult/c020ba77a99e63cf",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1744681519980,
          "stop" : 1744681520478,
          "duration" : 498
        }
      }, {
        "uid" : "1064e64405eb5823",
        "reportUrl" : "https://Areso.github.io/Oblache/368//#testresult/1064e64405eb5823",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1744595152310,
          "stop" : 1744595152628,
          "duration" : 318
        }
      }, {
        "uid" : "359074a8cd01afae",
        "reportUrl" : "https://Areso.github.io/Oblache/367//#testresult/359074a8cd01afae",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1744513731996,
          "stop" : 1744513732504,
          "duration" : 508
        }
      }, {
        "uid" : "600e553cde9c40af",
        "reportUrl" : "https://Areso.github.io/Oblache/366//#testresult/600e553cde9c40af",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1744421972682,
          "stop" : 1744421972995,
          "duration" : 313
        }
      }, {
        "uid" : "a197a34d559cc46d",
        "reportUrl" : "https://Areso.github.io/Oblache/365//#testresult/a197a34d559cc46d",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1744335756695,
          "stop" : 1744335757061,
          "duration" : 366
        }
      }, {
        "uid" : "c32f38ce21d8bdb9",
        "reportUrl" : "https://Areso.github.io/Oblache/364//#testresult/c32f38ce21d8bdb9",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1744249312968,
          "stop" : 1744249313338,
          "duration" : 370
        }
      }, {
        "uid" : "f9c8a6ab724ccbaa",
        "reportUrl" : "https://Areso.github.io/Oblache/363//#testresult/f9c8a6ab724ccbaa",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1744162916407,
          "stop" : 1744162916719,
          "duration" : 312
        }
      }, {
        "uid" : "e6d02d57beda0d34",
        "reportUrl" : "https://Areso.github.io/Oblache/362//#testresult/e6d02d57beda0d34",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1744076512797,
          "stop" : 1744076513309,
          "duration" : 512
        }
      }, {
        "uid" : "31b6ad1cb06ecc8e",
        "reportUrl" : "https://Areso.github.io/Oblache/361//#testresult/31b6ad1cb06ecc8e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1743990247351,
          "stop" : 1743990247631,
          "duration" : 280
        }
      }, {
        "uid" : "36b81f13e7699ca",
        "reportUrl" : "https://Areso.github.io/Oblache/360//#testresult/36b81f13e7699ca",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1743903976443,
          "stop" : 1743903976921,
          "duration" : 478
        }
      }, {
        "uid" : "fe4b206734be56aa",
        "reportUrl" : "https://Areso.github.io/Oblache/359//#testresult/fe4b206734be56aa",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1743817162249,
          "stop" : 1743817162562,
          "duration" : 313
        }
      }, {
        "uid" : "311177a1d6ee0f1e",
        "reportUrl" : "https://Areso.github.io/Oblache/358//#testresult/311177a1d6ee0f1e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1743730848265,
          "stop" : 1743730848579,
          "duration" : 314
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "d724b9e51cfabd25.json",
  "parameterValues" : [ ]
}