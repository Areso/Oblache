{
  "uid" : "cf059d2e0f0d1874",
  "name" : "Get profile status.",
  "fullName" : "tests_api.test_bd.TestGET#test_get_status",
  "historyId" : "1db526b86e70a0d5647421e92bf453b9",
  "time" : {
    "start" : 1712177981540,
    "stop" : 1712177981900,
    "duration" : 360
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code",
  "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7f25e1910a10>\n\n    @allure.title('Get profile status.')\n    def test_get_status(self):\n        result_get = API.get_status()\n>       Checking.check_status_code(result_get, 200)\n\ntests_api/test_bd.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response JSON\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, 'Incorrect status code'\nE           AssertionError: Incorrect status code\n\ntests_api/utils/checking.py:18: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code",
    "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7f25e1910a10>\n\n    @allure.title('Get profile status.')\n    def test_get_status(self):\n        result_get = API.get_status()\n>       Checking.check_status_code(result_get, 200)\n\ntests_api/test_bd.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response JSON\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, 'Incorrect status code'\nE           AssertionError: Incorrect status code\n\ntests_api/utils/checking.py:18: AssertionError",
    "steps" : [ {
      "name" : "get_status",
      "time" : {
        "start" : 1712177981541,
        "stop" : 1712177981900,
        "duration" : 359
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "GET https://dbend.areso.pro/get_profile",
        "time" : {
          "start" : 1712177981541,
          "stop" : 1712177981900,
          "duration" : 359
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 502",
          "time" : {
            "start" : 1712177981900,
            "stop" : 1712177981900,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Response: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
          "time" : {
            "start" : 1712177981900,
            "stop" : 1712177981900,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
        "time" : {
          "start" : 1712177981900,
          "stop" : 1712177981900,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 4,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 502",
      "time" : {
        "start" : 1712177981900,
        "stop" : 1712177981900,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 18, in check_status_code\n    assert status_code == result.status_code, 'Incorrect status code'\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 6,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "GET"
  }, {
    "name" : "epic",
    "value" : "GET REQUESTS"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestGET"
  }, {
    "name" : "host",
    "value" : "fv-az1240-962"
  }, {
    "name" : "thread",
    "value" : "2346-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 11,
        "unknown" : 0,
        "total" : 13
      },
      "items" : [ {
        "uid" : "aeda68b721a0d555",
        "reportUrl" : "https://Areso.github.io/Oblache/77//#testresult/aeda68b721a0d555",
        "status" : "passed",
        "time" : {
          "start" : 1712177134418,
          "stop" : 1712177134759,
          "duration" : 341
        }
      }, {
        "uid" : "2fb03bdccc37dec6",
        "reportUrl" : "https://Areso.github.io/Oblache/76//#testresult/2fb03bdccc37dec6",
        "status" : "passed",
        "time" : {
          "start" : 1712176275430,
          "stop" : 1712176275971,
          "duration" : 541
        }
      }, {
        "uid" : "d8a0beb92949eac5",
        "reportUrl" : "https://Areso.github.io/Oblache/75//#testresult/d8a0beb92949eac5",
        "status" : "passed",
        "time" : {
          "start" : 1712175344125,
          "stop" : 1712175344618,
          "duration" : 493
        }
      }, {
        "uid" : "c37e4fb9372a2a8f",
        "reportUrl" : "https://Areso.github.io/Oblache/74//#testresult/c37e4fb9372a2a8f",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1712174720557,
          "stop" : 1712174720862,
          "duration" : 305
        }
      }, {
        "uid" : "497017c1a0124b3b",
        "reportUrl" : "https://Areso.github.io/Oblache/73//#testresult/497017c1a0124b3b",
        "status" : "passed",
        "time" : {
          "start" : 1712173470657,
          "stop" : 1712173471196,
          "duration" : 539
        }
      }, {
        "uid" : "85577278b82a159b",
        "reportUrl" : "https://Areso.github.io/Oblache/71//#testresult/85577278b82a159b",
        "status" : "passed",
        "time" : {
          "start" : 1711374184224,
          "stop" : 1711374184616,
          "duration" : 392
        }
      }, {
        "uid" : "d7993961f85e6ae8",
        "reportUrl" : "https://Areso.github.io/Oblache/70//#testresult/d7993961f85e6ae8",
        "status" : "passed",
        "time" : {
          "start" : 1711321343650,
          "stop" : 1711321344251,
          "duration" : 601
        }
      }, {
        "uid" : "5ac5dcdb51d885c3",
        "reportUrl" : "https://Areso.github.io/Oblache/69//#testresult/5ac5dcdb51d885c3",
        "status" : "passed",
        "time" : {
          "start" : 1711020832714,
          "stop" : 1711020833052,
          "duration" : 338
        }
      }, {
        "uid" : "81eea842049d6f4",
        "reportUrl" : "https://Areso.github.io/Oblache/68//#testresult/81eea842049d6f4",
        "status" : "passed",
        "time" : {
          "start" : 1710944062431,
          "stop" : 1710944062826,
          "duration" : 395
        }
      }, {
        "uid" : "aec57beb9cacecb1",
        "reportUrl" : "https://Areso.github.io/Oblache/67//#testresult/aec57beb9cacecb1",
        "status" : "passed",
        "time" : {
          "start" : 1710943334999,
          "stop" : 1710943335384,
          "duration" : 385
        }
      }, {
        "uid" : "abe61240621ea57f",
        "reportUrl" : "https://Areso.github.io/Oblache/66//#testresult/abe61240621ea57f",
        "status" : "passed",
        "time" : {
          "start" : 1710942876574,
          "stop" : 1710942876913,
          "duration" : 339
        }
      }, {
        "uid" : "c31ded14ba670ede",
        "reportUrl" : "https://Areso.github.io/Oblache/65//#testresult/c31ded14ba670ede",
        "status" : "passed",
        "time" : {
          "start" : 1710942236461,
          "stop" : 1710942236788,
          "duration" : 327
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "cf059d2e0f0d1874.json",
  "parameterValues" : [ ]
}