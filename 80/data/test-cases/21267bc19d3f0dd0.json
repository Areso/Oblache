{
  "uid" : "21267bc19d3f0dd0",
  "name" : "List envs.",
  "fullName" : "tests_api.test_bd.TestGET#test_get_list_envs",
  "historyId" : "2fa206bdbd2e543ff40536a26ccb5d10",
  "time" : {
    "start" : 1712177980473,
    "stop" : 1712177980815,
    "duration" : 342
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code",
  "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7f25e1910680>\n\n    @allure.title('List envs.')\n    def test_get_list_envs(self):\n        result_get = API.get_list_envs()\n>       Checking.check_status_code(result_get, 200)\n\ntests_api/test_bd.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response JSON\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, 'Incorrect status code'\nE           AssertionError: Incorrect status code\n\ntests_api/utils/checking.py:18: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code",
    "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7f25e1910680>\n\n    @allure.title('List envs.')\n    def test_get_list_envs(self):\n        result_get = API.get_list_envs()\n>       Checking.check_status_code(result_get, 200)\n\ntests_api/test_bd.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response JSON\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, 'Incorrect status code'\nE           AssertionError: Incorrect status code\n\ntests_api/utils/checking.py:18: AssertionError",
    "steps" : [ {
      "name" : "get_list_envs",
      "time" : {
        "start" : 1712177980473,
        "stop" : 1712177980815,
        "duration" : 342
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "GET https://dbend.areso.pro/list_dbenvs",
        "time" : {
          "start" : 1712177980473,
          "stop" : 1712177980815,
          "duration" : 342
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 502",
          "time" : {
            "start" : 1712177980815,
            "stop" : 1712177980815,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Response: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
          "time" : {
            "start" : 1712177980815,
            "stop" : 1712177980815,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
        "time" : {
          "start" : 1712177980815,
          "stop" : 1712177980815,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 4,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 502",
      "time" : {
        "start" : 1712177980815,
        "stop" : 1712177980815,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 18, in check_status_code\n    assert status_code == result.status_code, 'Incorrect status code'\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 6,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "GET"
  }, {
    "name" : "epic",
    "value" : "GET REQUESTS"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestGET"
  }, {
    "name" : "host",
    "value" : "fv-az1240-962"
  }, {
    "name" : "thread",
    "value" : "2346-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 11,
        "unknown" : 0,
        "total" : 13
      },
      "items" : [ {
        "uid" : "8022c291b3e307bd",
        "reportUrl" : "https://Areso.github.io/Oblache/77//#testresult/8022c291b3e307bd",
        "status" : "passed",
        "time" : {
          "start" : 1712177133422,
          "stop" : 1712177133766,
          "duration" : 344
        }
      }, {
        "uid" : "f872ff0448e95b4c",
        "reportUrl" : "https://Areso.github.io/Oblache/76//#testresult/f872ff0448e95b4c",
        "status" : "passed",
        "time" : {
          "start" : 1712176273812,
          "stop" : 1712176274371,
          "duration" : 559
        }
      }, {
        "uid" : "dd2188281835d9e3",
        "reportUrl" : "https://Areso.github.io/Oblache/75//#testresult/dd2188281835d9e3",
        "status" : "passed",
        "time" : {
          "start" : 1712175342997,
          "stop" : 1712175343382,
          "duration" : 385
        }
      }, {
        "uid" : "68dc808541548d0",
        "reportUrl" : "https://Areso.github.io/Oblache/74//#testresult/68dc808541548d0",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1712174719410,
          "stop" : 1712174719840,
          "duration" : 430
        }
      }, {
        "uid" : "f8962cd0f61e626e",
        "reportUrl" : "https://Areso.github.io/Oblache/73//#testresult/f8962cd0f61e626e",
        "status" : "passed",
        "time" : {
          "start" : 1712173469074,
          "stop" : 1712173469610,
          "duration" : 536
        }
      }, {
        "uid" : "342162a72a9b9795",
        "reportUrl" : "https://Areso.github.io/Oblache/71//#testresult/342162a72a9b9795",
        "status" : "passed",
        "time" : {
          "start" : 1711374183061,
          "stop" : 1711374183452,
          "duration" : 391
        }
      }, {
        "uid" : "cb16566f9674f65",
        "reportUrl" : "https://Areso.github.io/Oblache/70//#testresult/cb16566f9674f65",
        "status" : "passed",
        "time" : {
          "start" : 1711321342662,
          "stop" : 1711321343003,
          "duration" : 341
        }
      }, {
        "uid" : "8ce5ad3b722e7cf7",
        "reportUrl" : "https://Areso.github.io/Oblache/69//#testresult/8ce5ad3b722e7cf7",
        "status" : "passed",
        "time" : {
          "start" : 1711020831677,
          "stop" : 1711020832017,
          "duration" : 340
        }
      }, {
        "uid" : "91ead8955cd8b9fe",
        "reportUrl" : "https://Areso.github.io/Oblache/68//#testresult/91ead8955cd8b9fe",
        "status" : "passed",
        "time" : {
          "start" : 1710944061283,
          "stop" : 1710944061678,
          "duration" : 395
        }
      }, {
        "uid" : "e78a71fd42b66a3f",
        "reportUrl" : "https://Areso.github.io/Oblache/67//#testresult/e78a71fd42b66a3f",
        "status" : "passed",
        "time" : {
          "start" : 1710943333859,
          "stop" : 1710943334239,
          "duration" : 380
        }
      }, {
        "uid" : "8ddfeb7f771a1519",
        "reportUrl" : "https://Areso.github.io/Oblache/66//#testresult/8ddfeb7f771a1519",
        "status" : "passed",
        "time" : {
          "start" : 1710942875579,
          "stop" : 1710942875923,
          "duration" : 344
        }
      }, {
        "uid" : "96479910216310f4",
        "reportUrl" : "https://Areso.github.io/Oblache/65//#testresult/96479910216310f4",
        "status" : "passed",
        "time" : {
          "start" : 1710942235474,
          "stop" : 1710942235802,
          "duration" : 328
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "21267bc19d3f0dd0.json",
  "parameterValues" : [ ]
}