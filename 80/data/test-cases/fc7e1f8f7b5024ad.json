{
  "uid" : "fc7e1f8f7b5024ad",
  "name" : "Post registration email is taken for en-us",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_registration_email_is_taken_for_en_en",
  "historyId" : "01089481a801c3ca1d24c8f43d47f1d3",
  "time" : {
    "start" : 1712177984481,
    "stop" : 1712177984835,
    "duration" : 354
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f25e1910c80>\n\n    @allure.title('Post registration email is taken for en-us')\n    def test_post_registration_email_is_taken_for_en_en(self):\n        result_post = API.post_registration(\"en-us\", True)\n>       Checking.check_status_code(result_post, 400)\n\ntests_api/test_bd.py:171: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 400\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response JSON\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, 'Incorrect status code'\nE           AssertionError: Incorrect status code\n\ntests_api/utils/checking.py:18: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f25e1910c80>\n\n    @allure.title('Post registration email is taken for en-us')\n    def test_post_registration_email_is_taken_for_en_en(self):\n        result_post = API.post_registration(\"en-us\", True)\n>       Checking.check_status_code(result_post, 400)\n\ntests_api/test_bd.py:171: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 400\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response JSON\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, 'Incorrect status code'\nE           AssertionError: Incorrect status code\n\ntests_api/utils/checking.py:18: AssertionError",
    "steps" : [ {
      "name" : "post_registration",
      "time" : {
        "start" : 1712177984481,
        "stop" : 1712177984834,
        "duration" : 353
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "POST https://dbend.areso.pro/register",
        "time" : {
          "start" : 1712177984481,
          "stop" : 1712177984834,
          "duration" : 353
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 502",
          "time" : {
            "start" : 1712177984834,
            "stop" : 1712177984834,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Params url: https://dbend.areso.pro/register",
          "time" : {
            "start" : 1712177984834,
            "stop" : 1712177984834,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "language",
        "value" : "'en-us'"
      }, {
        "name" : "tos_agree",
        "value" : "True"
      } ],
      "stepsCount" : 3,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 400 == Response status code: 502",
      "time" : {
        "start" : 1712177984834,
        "stop" : 1712177984834,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 18, in check_status_code\n    assert status_code == result.status_code, 'Incorrect status code'\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 5,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "epic",
    "value" : "POST REQUESTS"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1240-962"
  }, {
    "name" : "thread",
    "value" : "2346-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 11,
        "unknown" : 0,
        "total" : 13
      },
      "items" : [ {
        "uid" : "fe98107db026374d",
        "reportUrl" : "https://Areso.github.io/Oblache/77//#testresult/fe98107db026374d",
        "status" : "passed",
        "time" : {
          "start" : 1712177136656,
          "stop" : 1712177136995,
          "duration" : 339
        }
      }, {
        "uid" : "5d46e6a333a0ae6c",
        "reportUrl" : "https://Areso.github.io/Oblache/76//#testresult/5d46e6a333a0ae6c",
        "status" : "passed",
        "time" : {
          "start" : 1712176278705,
          "stop" : 1712176279251,
          "duration" : 546
        }
      }, {
        "uid" : "17a1c8eb8015e7bc",
        "reportUrl" : "https://Areso.github.io/Oblache/75//#testresult/17a1c8eb8015e7bc",
        "status" : "passed",
        "time" : {
          "start" : 1712175346629,
          "stop" : 1712175347009,
          "duration" : 380
        }
      }, {
        "uid" : "156256b313293452",
        "reportUrl" : "https://Areso.github.io/Oblache/74//#testresult/156256b313293452",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code",
        "time" : {
          "start" : 1712174722664,
          "stop" : 1712174722969,
          "duration" : 305
        }
      }, {
        "uid" : "794ceabfbcd9d9db",
        "reportUrl" : "https://Areso.github.io/Oblache/73//#testresult/794ceabfbcd9d9db",
        "status" : "passed",
        "time" : {
          "start" : 1712173473972,
          "stop" : 1712173474520,
          "duration" : 548
        }
      }, {
        "uid" : "c1b9e5c8a489c063",
        "reportUrl" : "https://Areso.github.io/Oblache/71//#testresult/c1b9e5c8a489c063",
        "status" : "passed",
        "time" : {
          "start" : 1711374186679,
          "stop" : 1711374187080,
          "duration" : 401
        }
      }, {
        "uid" : "fbb9ade8b554ce6a",
        "reportUrl" : "https://Areso.github.io/Oblache/70//#testresult/fbb9ade8b554ce6a",
        "status" : "passed",
        "time" : {
          "start" : 1711321345989,
          "stop" : 1711321346332,
          "duration" : 343
        }
      }, {
        "uid" : "eada4f8286056580",
        "reportUrl" : "https://Areso.github.io/Oblache/69//#testresult/eada4f8286056580",
        "status" : "passed",
        "time" : {
          "start" : 1711020834875,
          "stop" : 1711020835228,
          "duration" : 353
        }
      }, {
        "uid" : "7b801eb978594b",
        "reportUrl" : "https://Areso.github.io/Oblache/68//#testresult/7b801eb978594b",
        "status" : "passed",
        "time" : {
          "start" : 1710944064819,
          "stop" : 1710944065205,
          "duration" : 386
        }
      }, {
        "uid" : "872defce57c4df97",
        "reportUrl" : "https://Areso.github.io/Oblache/67//#testresult/872defce57c4df97",
        "status" : "passed",
        "time" : {
          "start" : 1710943337378,
          "stop" : 1710943337789,
          "duration" : 411
        }
      }, {
        "uid" : "631449d955d26eb4",
        "reportUrl" : "https://Areso.github.io/Oblache/66//#testresult/631449d955d26eb4",
        "status" : "passed",
        "time" : {
          "start" : 1710942878638,
          "stop" : 1710942878982,
          "duration" : 344
        }
      }, {
        "uid" : "fcc134a80ebfe34a",
        "reportUrl" : "https://Areso.github.io/Oblache/65//#testresult/fcc134a80ebfe34a",
        "status" : "passed",
        "time" : {
          "start" : 1710942238512,
          "stop" : 1710942238837,
          "duration" : 325
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "fc7e1f8f7b5024ad.json",
  "parameterValues" : [ ]
}