{
  "uid" : "f6f4998706b4496d",
  "name" : "POST checking ports_len positive",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_checking_ports_len_positive",
  "historyId" : "c6f631852f230d7f46e21d1143ab0d56",
  "time" : {
    "start" : 1735953923842,
    "stop" : 1735953924334,
    "duration" : 492
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 400",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f428e6520c0>\n\n    @allure.title('POST checking ports_len positive')\n    def test_post_checking_ports_len_positive(self):\n        result = API.post_create_docker_container_checking_ports(\n            token=TestPOST.token,\n            port_len=\"80-89\")\n>       Checking.check_status_code(result, 201)\n\ntests_api/test_bd.py:374: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 400",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f428e6520c0>\n\n    @allure.title('POST checking ports_len positive')\n    def test_post_checking_ports_len_positive(self):\n        result = API.post_create_docker_container_checking_ports(\n            token=TestPOST.token,\n            port_len=\"80-89\")\n>       Checking.check_status_code(result, 201)\n\ntests_api/test_bd.py:374: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_create_docker_container",
      "time" : {
        "start" : 1735953923842,
        "stop" : 1735953924333,
        "duration" : 491
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_create",
        "time" : {
          "start" : 1735953924333,
          "stop" : 1735953924333,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1735953924333,
          "stop" : 1735953924333,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Url: https://dbend.areso.pro/container_create",
          "time" : {
            "start" : 1735953924333,
            "stop" : 1735953924333,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': '19ac6dae-9bc1-4921-92c8-44011466c5e1'}",
          "time" : {
            "start" : 1735953924333,
            "stop" : 1735953924333,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"docker_image\": \"nginx\", \"int_ports\": f\"80-89\", \"env\": 3, \"region\": 3}",
          "time" : {
            "start" : 1735953924333,
            "stop" : 1735953924333,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 3,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1735953924333,
          "stop" : 1735953924333,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 400",
          "time" : {
            "start" : 1735953924333,
            "stop" : 1735953924333,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n    \"msg_code\": -1,\n    \"msg\": \"endpoint is disabled\"\n}\n",
          "time" : {
            "start" : 1735953924333,
            "stop" : 1735953924333,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 8,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 201 == Response status code: 400",
      "time" : {
        "start" : 1735953924333,
        "stop" : 1735953924333,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 400\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 10,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1336-855"
  }, {
    "name" : "thread",
    "value" : "2444-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 73,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 70,
        "unknown" : 0,
        "total" : 146
      },
      "items" : [ {
        "uid" : "865a8c5e7b040ea",
        "reportUrl" : "https://Areso.github.io/Oblache/267//#testresult/865a8c5e7b040ea",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1735867604700,
          "stop" : 1735867605019,
          "duration" : 319
        }
      }, {
        "uid" : "4f93140c2f167931",
        "reportUrl" : "https://Areso.github.io/Oblache/266//#testresult/4f93140c2f167931",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1735781159854,
          "stop" : 1735781160383,
          "duration" : 529
        }
      }, {
        "uid" : "6f92024718e273ce",
        "reportUrl" : "https://Areso.github.io/Oblache/265//#testresult/6f92024718e273ce",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1735695651888,
          "stop" : 1735695652204,
          "duration" : 316
        }
      }, {
        "uid" : "1c69fcf2c57e54af",
        "reportUrl" : "https://Areso.github.io/Oblache/264//#testresult/1c69fcf2c57e54af",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1735608378451,
          "stop" : 1735608378952,
          "duration" : 501
        }
      }, {
        "uid" : "a5c9630c83723e52",
        "reportUrl" : "https://Areso.github.io/Oblache/263//#testresult/a5c9630c83723e52",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1735522604955,
          "stop" : 1735522605469,
          "duration" : 514
        }
      }, {
        "uid" : "51ccd4e48f1137c9",
        "reportUrl" : "https://Areso.github.io/Oblache/262//#testresult/51ccd4e48f1137c9",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1735436470748,
          "stop" : 1735436471264,
          "duration" : 516
        }
      }, {
        "uid" : "32fbf3984f5cf69f",
        "reportUrl" : "https://Areso.github.io/Oblache/261//#testresult/32fbf3984f5cf69f",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1735349091638,
          "stop" : 1735349091945,
          "duration" : 307
        }
      }, {
        "uid" : "aa87ea7388ebd5f4",
        "reportUrl" : "https://Areso.github.io/Oblache/260//#testresult/aa87ea7388ebd5f4",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1735262771241,
          "stop" : 1735262771548,
          "duration" : 307
        }
      }, {
        "uid" : "db4c81037639227f",
        "reportUrl" : "https://Areso.github.io/Oblache/259//#testresult/db4c81037639227f",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1735176348427,
          "stop" : 1735176348744,
          "duration" : 317
        }
      }, {
        "uid" : "33b024a7d9055aa9",
        "reportUrl" : "https://Areso.github.io/Oblache/258//#testresult/33b024a7d9055aa9",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1735089953862,
          "stop" : 1735089954225,
          "duration" : 363
        }
      }, {
        "uid" : "a5b581d1a85a889a",
        "reportUrl" : "https://Areso.github.io/Oblache/257//#testresult/a5b581d1a85a889a",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1735003588271,
          "stop" : 1735003588592,
          "duration" : 321
        }
      }, {
        "uid" : "f5820a96f519e65",
        "reportUrl" : "https://Areso.github.io/Oblache/256//#testresult/f5820a96f519e65",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1734917289670,
          "stop" : 1734917290181,
          "duration" : 511
        }
      }, {
        "uid" : "9e4c337521d65015",
        "reportUrl" : "https://Areso.github.io/Oblache/255//#testresult/9e4c337521d65015",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1734831594167,
          "stop" : 1734831594472,
          "duration" : 305
        }
      }, {
        "uid" : "37a6c159e4efa0ea",
        "reportUrl" : "https://Areso.github.io/Oblache/254//#testresult/37a6c159e4efa0ea",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1734744314768,
          "stop" : 1734744315084,
          "duration" : 316
        }
      }, {
        "uid" : "40057da77d10c7ae",
        "reportUrl" : "https://Areso.github.io/Oblache/253//#testresult/40057da77d10c7ae",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1734658023389,
          "stop" : 1734658023707,
          "duration" : 318
        }
      }, {
        "uid" : "b6fce0ec5509be3e",
        "reportUrl" : "https://Areso.github.io/Oblache/252//#testresult/b6fce0ec5509be3e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1734572385310,
          "stop" : 1734572385816,
          "duration" : 506
        }
      }, {
        "uid" : "fc79f25d74e67033",
        "reportUrl" : "https://Areso.github.io/Oblache/250//#testresult/fc79f25d74e67033",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1734399708181,
          "stop" : 1734399708495,
          "duration" : 314
        }
      }, {
        "uid" : "83d8f256fefe4353",
        "reportUrl" : "https://Areso.github.io/Oblache/249//#testresult/83d8f256fefe4353",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1734313542361,
          "stop" : 1734313542718,
          "duration" : 357
        }
      }, {
        "uid" : "efc1419543b8a4b3",
        "reportUrl" : "https://Areso.github.io/Oblache/248//#testresult/efc1419543b8a4b3",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1734227291376,
          "stop" : 1734227291737,
          "duration" : 361
        }
      }, {
        "uid" : "24de71eedcb08c4a",
        "reportUrl" : "https://Areso.github.io/Oblache/247//#testresult/24de71eedcb08c4a",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1734140339567,
          "stop" : 1734140339885,
          "duration" : 318
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "f6f4998706b4496d.json",
  "parameterValues" : [ ]
}