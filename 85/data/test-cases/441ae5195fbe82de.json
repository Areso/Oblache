{
  "uid" : "441ae5195fbe82de",
  "name" : "test_delete_container",
  "fullName" : "tests_api.test_bd.TestPOST#test_delete_container",
  "historyId" : "f292c4cfa0c4b2dd77724aada1d3db8c",
  "time" : {
    "start" : 1712599670673,
    "stop" : 1712599671460,
    "duration" : 787
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f1d6ef02180>\n\n    @allure.title('test_delete_container')\n    def test_delete_container(self):\n        result = API.post_delete_docker_container(ConnectionData.token, -1)\n        print(result.text, result.status_code)\n>       Checking.check_status_code(result, 200)\n\ntests_api/test_bd.py:331: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response JSON\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, 'Incorrect status code'\nE           AssertionError: Incorrect status code\n\ntests_api/utils/checking.py:18: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f1d6ef02180>\n\n    @allure.title('test_delete_container')\n    def test_delete_container(self):\n        result = API.post_delete_docker_container(ConnectionData.token, -1)\n        print(result.text, result.status_code)\n>       Checking.check_status_code(result, 200)\n\ntests_api/test_bd.py:331: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response JSON\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, 'Incorrect status code'\nE           AssertionError: Incorrect status code\n\ntests_api/utils/checking.py:18: AssertionError",
    "steps" : [ {
      "name" : "post_delete_docker_container",
      "time" : {
        "start" : 1712599670673,
        "stop" : 1712599671459,
        "duration" : 786
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "post_container_list",
        "time" : {
          "start" : 1712599670673,
          "stop" : 1712599671064,
          "duration" : 391
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "POST https://dbend.areso.pro/container_list",
          "time" : {
            "start" : 1712599670673,
            "stop" : 1712599671064,
            "duration" : 391
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "Status code: 200",
            "time" : {
              "start" : 1712599671064,
              "stop" : 1712599671064,
              "duration" : 0
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ ],
            "parameters" : [ ],
            "stepsCount" : 0,
            "attachmentsCount" : 0,
            "shouldDisplayMessage" : false,
            "hasContent" : false
          }, {
            "name" : "Params url: https://dbend.areso.pro/container_list",
            "time" : {
              "start" : 1712599671064,
              "stop" : 1712599671064,
              "duration" : 0
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ ],
            "parameters" : [ ],
            "stepsCount" : 0,
            "attachmentsCount" : 0,
            "shouldDisplayMessage" : false,
            "hasContent" : false
          } ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 2,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 3,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "POST https://dbend.areso.pro/container_delete, body: {'docker_uuid': '06614327-52d5-71f5-8000-58c67c2648e6'}",
        "time" : {
          "start" : 1712599671064,
          "stop" : 1712599671459,
          "duration" : 395
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 400",
          "time" : {
            "start" : 1712599671459,
            "stop" : 1712599671459,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Params url: https://dbend.areso.pro/container_delete",
          "time" : {
            "start" : 1712599671459,
            "stop" : 1712599671459,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response JSON: {\n    \"content\": \"msg[18]: error: can't delete a db while it's creating\"\n}\n",
        "time" : {
          "start" : 1712599671459,
          "stop" : 1712599671459,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 8,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 400",
      "time" : {
        "start" : 1712599671459,
        "stop" : 1712599671459,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 18, in check_status_code\n    assert status_code == result.status_code, 'Incorrect status code'\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 10,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "POST REQUESTS"
  }, {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az692-393"
  }, {
    "name" : "thread",
    "value" : "2306-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 4,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 5
      },
      "items" : [ {
        "uid" : "a38edd9b1bd43dc6",
        "reportUrl" : "https://Areso.github.io/Oblache/84//#testresult/a38edd9b1bd43dc6",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code",
        "time" : {
          "start" : 1712344882159,
          "stop" : 1712344882847,
          "duration" : 688
        }
      }, {
        "uid" : "8bc30caa9ba90f70",
        "reportUrl" : "https://Areso.github.io/Oblache/83//#testresult/8bc30caa9ba90f70",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code",
        "time" : {
          "start" : 1712180649322,
          "stop" : 1712180650403,
          "duration" : 1081
        }
      }, {
        "uid" : "87cf88c6498e537e",
        "reportUrl" : "https://Areso.github.io/Oblache/81//#testresult/87cf88c6498e537e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code",
        "time" : {
          "start" : 1712180279676,
          "stop" : 1712180280782,
          "duration" : 1106
        }
      }, {
        "uid" : "3e03ea2850417c71",
        "reportUrl" : "https://Areso.github.io/Oblache/82//#testresult/3e03ea2850417c71",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1712179395394,
          "stop" : 1712179395700,
          "duration" : 306
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "441ae5195fbe82de.json",
  "parameterValues" : [ ]
}